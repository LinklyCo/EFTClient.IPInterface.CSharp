using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using IPInterface.TestPOS.Utils;

namespace PCEFTPOS.EFTClient.IPInterface.TestPOS.ViewModel
{

    public class ClientViewModel : INotifyPropertyChanged
    {
        const string QPAD_FILENAME = "padtags.json";
        const string TRACK2_FILENAME = "Track2_List.json";
        const string SLAVE_CMD_FILENAME = "slave.json";
        const string SETTINGS_FILENAME = "settings.json";
        const string ENDPOINTS_FILENAME = "endpoints.json";
        private const int EFT_LOG_DISABLED = -1;
        readonly EftWrapper eftw = null;
        ProxyDialog proxy = new ProxyDialog();
        private readonly MainWindow _parent;
        private Timer _eftLogTimer;
        private string _eftLogPath;
        private int _eftLogOffset = EFT_LOG_DISABLED;

        public event LogEvent OnLog;

        public ClientViewModel(MainWindow parent)
        {
            _parent = parent;

            // initialize external data
            Data.Track2Items  = PadEditor.GetData(TRACK2_FILENAME);
            Data.PadItems     = PadEditor.GetData(QPAD_FILENAME);
            Data.CommandsList = PadEditor.GetData(SLAVE_CMD_FILENAME);

            // Set up defaults
            if (Data.PadItems.Count <= 0)
            {
                Data.PadItems = PadEditor.AddData(QPAD_FILENAME, new ExternalData("Pay @ Table", "PAT0011"));
            }
            if (Data.CommandsList.Count <= 0)
            {
                PadEditor.AddData(SLAVE_CMD_FILENAME, new ExternalData("Enter Slave Mode", "*@101S1004300 "));
                PadEditor.AddData(SLAVE_CMD_FILENAME, new ExternalData("Display 'Swipe Card'", "*@103Z 0060220  D 0240000   SWIPE CARD       D 0240100                    "));
                PadEditor.AddData(SLAVE_CMD_FILENAME, new ExternalData("Swipe Card", "*@102J1000K100810000010"));
                PadEditor.AddData(SLAVE_CMD_FILENAME, new ExternalData("Exit Slave Mode", "*@101S0000"));
                Data.CommandsList = PadEditor.AddData(SLAVE_CMD_FILENAME, new ExternalData("Complete Read Card Command", "*@106S1004300 Z 0060216  D 0240000   SWIPE CARD       D 0240100                    J1000K100810000010"));
            }

            // load endpoints from file //
            var endPointEditor = new EndpointEditor(ENDPOINTS_FILENAME);
            Data.EndPoints = endPointEditor.EndPoints;
            // Insert auto local end-points
            Data.CurrentEndPoint = Data.EndPoints.FirstOrDefault();

            // setup data
            Data.PropertyChanged += Data_PropertyChanged;
            eftw = new EftWrapper(Data);

            Data.OnLog += Data_OnLog;
            Data.OnDisplay += Data_OnDisplay;
            Data.OnDisplayChanged += Data_OnDisplayChanged;

            proxyVM.OnSendKey += ProxyVM_OnSendKey;

            var fileSpec = EFTRegistry.GetSubkeyStringValue("EVL", "FILESPEC", "EFTPOS.LOG");
            var split = fileSpec.SplitLast(new[] { '\\' }, StringSplitOptions.RemoveEmptyEntries);
            string fileName, fileDir = null;
            switch (split.Length)
            {
                case 2:  fileName = split[1];     fileDir  = split[0]; break;
                case 1:  fileName = split[0];                          break;
                default: fileName = "EFTPOS.LOG";                      break;
            }

            if (fileDir == null)
                fileDir = EFTRegistry.GetSubkeyStringValue("EVL", "BASE_DIRECTORY", "C:\\PC_EFT\\");

            _eftLogPath = Path.Combine(fileDir, fileName);
            
            _eftLogTimer = new Timer(UpdateEftLog, null, TimeSpan.Zero, TimeSpan.FromSeconds(1));
        }

        private void UpdateEftLog(object state)
        {
            if (Data.EftLogEnabled)
            {
                try
                {
                    var logSize = (int)new FileInfo(_eftLogPath).Length;
                    if (_eftLogOffset == EFT_LOG_DISABLED)
                        _eftLogOffset = logSize; //Eft log just enabled, set initial offset
                    else if (logSize == _eftLogOffset)
                        return; //nothing to log

                    if (logSize < _eftLogOffset)
                        _eftLogOffset = 0; //EFTPOS.LOG File has been cycled, reset offset

                    using (var fs = new FileStream(_eftLogPath, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))
                    using (var sr = new StreamReader(fs, Encoding.Default))
                    {
                        fs.Seek(_eftLogOffset, SeekOrigin.Begin);
                        Data.EftLog += sr.ReadToEnd();
                    }

                    _eftLogOffset = logSize;
                }
                catch (Exception e)
                {
                    Data.Log($"Failed to read EFTPOS.LOG ({_eftLogPath}): {e}");
                }
            }
            else
            {
                _eftLogOffset = EFT_LOG_DISABLED;
            }
        }

        private void Data_OnDisplayChanged(object sender, EventArgs e)
        {
            ProxyVM.DisplayDetails = Data.DisplayDetails;
        }

        private async void ProxyVM_OnSendKey(object sender, EFTSendKeyRequest e)
        {
            if (Data.Settings.IsWoolworthsPOS && e.Key == EFTPOSKey.Authorise)
            {
                if (e.Data[0] == 'B')
                {
                    e.Key = EFTPOSKey.Barcode;
                    e.Data = e.Data.Substring(1);
                }
                else if (e.Data[0] == 'K')
                {
                    e.Key = EFTPOSKey.Keyed;
                    e.Data = e.Data.Substring(1);
                }
            }
         
            await eftw.SendKey(e.Key, e.Data);
        }

        private void Data_OnDisplay(bool show)
        {
            ShowProxyDialog(show);
        }

        public void Initialize()
        {
            LoadSettings();
        }

        private void Data_OnLog(string message)
        {
            OnLog?.Invoke(message);
        }

        #region Common
        public event PropertyChangedEventHandler PropertyChanged;

        protected void NotifyPropertyChanged(string info)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(info));
        }

        private void Data_PropertyChanged(object sender, PropertyChangedEventArgs e)
        {
            NotifyPropertyChanged(e.PropertyName);
        }
        #endregion

        #region Properties
        public string AppTitle => $"Linkly Test POS (v{Assembly.GetExecutingAssembly().GetName().Version})";
        public ClientData Data { get; } = new ClientData();
        #endregion


        #region Common
        public RelayCommand ClearResult
        {
            get
            {
                return new RelayCommand((o) =>
                {
                    Data.LastTxnRespType = null;
                    Data.LastTxnResult = new Dictionary<string, string>();
                });
            }
        }

        private void LoadSettings()
        {
            try
            {
                var settings = new JsonWriter();
                settings.Load(SETTINGS_FILENAME, out UserSettings data);

                if (data != default(UserSettings))
                {
                    data.CloudInfo.LoadCredentials();
                    Data.Settings = data;

                    Data.PrintMode = (ReceiptPrintModeType)Data.Settings.PrintMode;
                }
            }
            catch(Exception e)
            {
                Data.Log($"Exception loading settings. {e.Message}", LogType.Error);
            }
        }

        public void SaveSettings()
        {
            try
            {
                Data.Settings.PrintMode = (int)Data.PrintMode;
                Data.Settings.CloudInfo.SaveCredentials();

                JsonWriter settings = new JsonWriter();
                settings.Save(Data.Settings, SETTINGS_FILENAME);
            }
            catch (Exception ex)
            {
                Trace.WriteLine(ex.Message);
            }
        }

        public RelayCommand AbandonInProgressCommand
        {
            get
            {
                return new RelayCommand(o =>
                {
                    string request = eftw.RequestInProgressString;
                    if (MessageBox.Show($"Abandon in progress '{request}'?", $"Abandon '{request}'?", MessageBoxButton.YesNo, MessageBoxImage.Question) == MessageBoxResult.Yes)
                    {
                        if (eftw.InSlaveMode)
                            _ = eftw.DoSlaveMode(SLAVE_MODE_EXIT);
                        else
                            _ = eftw.SendKey(EFTPOSKey.OkCancel);
                        eftw.RequestInProgress = null;
                    }
                });
            }
        }

        public RelayCommand ClearHistoryCommand => new RelayCommand(o => Data.MessageHistory.Clear());

        public RelayCommand SaveLogCommand => new RelayCommand(o =>
        {
            SaveFileDialog saveFileDialog = new SaveFileDialog();
            if(saveFileDialog.ShowDialog().GetValueOrDefault())
            {
                File.WriteAllText(saveFileDialog.FileName, Data.LogMessages);
            }
        });
        public RelayCommand ClearLogCommand => new RelayCommand(o => Data.LogMessages = string.Empty);
        public RelayCommand ClearEftLogCommand => new RelayCommand(o => Data.EftLog = string.Empty);

        #endregion

        #region Connection
        private async Task<bool> ConnectAsync()
        {
            var r = await eftw.Connect(Data.Settings.Host, Data.Settings.Port, Data.Settings.UseSSL);
            Data.IsSettingsShown = !r;
            return r;
        }

        private async Task<bool> ConnectAsync(string host, int port, bool useSSL)
        {
            Data.Settings.Host = host;
            Data.Settings.Port = port;
            Data.Settings.UseSSL = useSSL;
            return await ConnectAsync();
        }

        private async Task DoCloudLogonCommand(bool connect)
        {
            try
            {
                var p = Data.CurrentEndPoint;
                if (p == null)
                {
                    Data.Log("Not connected to an endpoint", LogType.Info);
                    return;
                }

                if(connect)
                {
                    Data.Log($"{p.Type} connection to {p.Address}:{p.Port}...", LogType.Info);
                    await ConnectAsync(p.Address, p.Port, p.UseSSL);
                }

                // Attempt to connect
                switch (p.Type)
                {
                    case EndPointType.Local:
                        break;
                    case EndPointType.CloudWithLegacyPairing:
                        Data.Log("Cloud (legacy pairing) logon...", LogType.Info);

                        Data.Settings.CloudInfo.ClientId = p.ClientId;
                        Data.Settings.CloudInfo.Password = p.Password;
                        Data.Settings.CloudInfo.PairingCode = p.PairingCode;
                        await DoCloudLogon(p.Password);
                        break;
                    case EndPointType.Cloud:
                        Data.Log("Cloud logon...", LogType.Info);
                        if (string.IsNullOrEmpty(p.Token))
                        {
                            Data.Log($"Invalid token. Pair with pinpad in end-point settings to continue...", LogType.Info);
                        }
                        else
                        {
                            await DoCloudTokenLogon(p.Token);
                        }
                        break;
                }
            }
            catch (Exception ex)
            {
                Data.Log(ex.Message, LogType.Error);
            }
        }

        public void DoConnect() => _ = DoCloudLogonCommand(true);

        public void DoDisconnect()
        {
            eftw.Disconnect();
            Data.IsSettingsShown = true;
        }
        #endregion

        #region ConnectToEndpoint
        public RelayCommand ConnectToEndpointCommand
        {
            get 
            {
                return new RelayCommand((o) =>
                {
                    try
                    {
                        if (Data.ConnectedState == ConnectedStatus.Disconnected)
                        {
                            if (Data.Settings.IsWoolworthsPOS)
                                Data.ConnectedState = ConnectedStatus.AutoConnect;
                            else
                                DoConnect();
                        }
                        else
                        {
                            DoDisconnect();
                        }
                    }
                    catch (Exception ex)
                    {
                        Data.Log(ex.Message, LogType.Error);
                    }
                });
            }
        }
        #endregion

        #region CloudLogon
        public RelayCommand CloudLogonCommand => new RelayCommand((o) => _ = DoCloudLogonCommand(false));
        #endregion

        #region Logon
        public RelayCommand LogonCommand
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    try
                    {
                        ThrowOnCurrentFormError();

                        var r = new EFTLogonRequest()
                        {
                            LogonType = Data.SelectedLogon,
                            CutReceipt = Data.CutReceiptMode,
                            ReceiptAutoPrint = Data.PrintMode,
                            Application = Data.Application,
                            Merchant = Data.MerchantNumber,
                            PurchaseAnalysisData = GetPad(false)
                        };

                        await eftw.Logon(r, false);
                    }
                    catch (Exception e)
                    {
                        Data.Log(e.Message);
                    }
                });
            }
        }

        public RelayCommand CloudLogon
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    string p = (string)o;
                    await DoCloudLogon(p);
                });
            }
        }

        public async Task DoCloudLogon(string password, bool pairingReq = false, bool autoLogin = false)
        {
            try
            {
                if (Data.ConnectedState == ConnectedStatus.Disconnected && !await ConnectAsync())
                {
                    return;
                }

                Data.Settings.CloudInfo.Password = password;
                if (pairingReq)
                {
                    await eftw.CloudPairingRequest(Data.Settings.CloudInfo.ClientId, Data.Settings.CloudInfo.Password, Data.Settings.CloudInfo.PairingCode);
                }
                else
                {
                    await eftw.CloudLogon(Data.Settings.CloudInfo.ClientId, Data.Settings.CloudInfo.Password, Data.Settings.CloudInfo.PairingCode);
                }

                if (Data.Settings.CloudInfo.IsAutoLogin && !autoLogin)
                {
                    SaveSettings();
                }
            }
            catch (Exception ex)
            {
                Data_OnLog(ex.Message);
            }
        }

        public async Task DoCloudTokenLogon(string token)
        {
            try
            {
                if (Data.ConnectedState == ConnectedStatus.Disconnected && !await ConnectAsync())
                {
                     return;
                }

                await eftw.CloudTokenLogon(token);
            }
            catch (Exception ex)
            {
                Data_OnLog(ex.Message);
            }

        }

        public RelayCommand ToggleLogonCommand
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    if (!Data.LogonTestEnabled)
                    {
                        Data.LogonTestEnabled = true;
                        await eftw.StartLogonTest(Data.SelectedLogon, Data.CutReceiptMode, Data.PrintMode);
                    }
                    else
                    {
                        Data.LogonTestEnabled = false;
                        eftw.StopLogonTest();
                    }
                });
            }
        }

        public RelayCommand ToggleHeartbeatTestCommand
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    if (!Data.HeartbeatTestEnabled)
                    {
                        Data.HeartbeatTestEnabled = true;
                        await eftw.StartHeartbeatTest();
                    }
                    else
                    {
                        Data.HeartbeatTestEnabled = false;
                        eftw.StopHeartbeatTest();
                    }
                });
            }
        }

        #endregion

        #region PadTag
        private void SetPadTag(PadField padField, bool setTag, string tagName, string newData, bool forceReplace)
        {
            if ((padField != null) && setTag && !string.IsNullOrEmpty(newData) && (!padField.HasTag(tagName) || forceReplace))
            {
                padField.SetTag(tagName, newData);
            }
        }

        private void UpdateAndSavePadList(PadField padField)
        {
            foreach (PadTag tag in padField)
            {
                string tagString = tag.ToString();
                if (Data.PadItems.Find(x => x.Value.Equals(tagString)) == null)
                {
                    ExternalData newData = new ExternalData(tagString, tagString);
                    PadEditor.AddData(QPAD_FILENAME, newData);
                    Data.PadItems.Add(newData);
                    Data.PadItemsList.Last().IsChecked = true;
                }
            }
        }

        void AddAutoPadTags(ref PadField pf)
        {
            SetPadTag(pf, Data.PADAppendAMT, "AMT", decimal.ToInt32(Data.TransactionRequest.AmtPurchase * 100).ToString(), false);
            SetPadTag(pf, Data.PADAppendNME, "NME", "Linkly Test POS", false);
            SetPadTag(pf, Data.PADAppendVER, "VER", Data.POSVersion, false);
            SetPadTag(pf, Data.PADAppendOPR, "OPR", "0|USER", false);
            SetPadTag(pf, Data.PADAppendUID, "UID", Guid.NewGuid().ToString("N"), false);
            SetPadTag(pf, Data.PADAppendVND, "VND", Data.POSVendorId.ToString("N"), false);
            SetPadTag(pf, Data.PADAppendPCM, "PCM", Data.PADPCMBarcode ? "10000000" : "00000000", false);
            SetPadTag(pf, Data.PADAppendSKU, "SKU", Data.PADSKUId, false);
            SetPadTag(pf, Data.PADAppendRFN, "RFN", Data.LastTxnRFN, false);
        }

        PadField GetPad(bool includeAutoPadTags)
        {
            var pf = new PadField(Data.SelectedPad);

            UpdateAndSavePadList(pf);

            if (includeAutoPadTags)
            {
                AddAutoPadTags(ref pf);
            }
            return pf;
        }
        #endregion

        #region Transaction
        private string GetAndSaveSelectedTrack2()
        {
            string track2 = string.Empty;
            if(Data.TransactionRequest.PanSource != PanSource.POSSwiped)
            {
                Data.SelectedTrack2 = string.Empty;
            }
            else if(!string.IsNullOrEmpty(Data.SelectedTrack2))
            {
                var selectedTrack = Data.Track2Items.Find(x => x.ToString().Equals(Data.SelectedTrack2));
                if (selectedTrack != null)
                {
                    //Use the saved track2 value
                    track2 = selectedTrack.Value;
                }
                else
                {
                    string[] track2Fields = Data.SelectedTrack2.Split(new string[] { " | " }, 2, StringSplitOptions.RemoveEmptyEntries);
                    string name;
                    if(track2Fields.Length == 2)
                    {
                        //Selected track2 looks like a saved value, extract name/value and update
                        name = track2Fields[0];
                        track2 = track2Fields[1];
                    }
                    else
                    {
                        //Use track2 as the name for new data to save
                        name = Data.SelectedTrack2;
                        track2 = Data.SelectedTrack2;
                    }
                    Data.Track2Items = PadEditor.AddData(TRACK2_FILENAME, new ExternalData(name, track2));
                }
            }

            return track2;
        }

        private void CheckAddAutoTransactionReference()
        {
            if (Data.AutoTransactionReference)
            {
                Data.TransactionReference = DateTime.Now.ToString(Data.Settings.IsWoolworthsPOS ? "HHmmssff" : "yyMMddHHmmssffff");
            }
        }

        private IEnumerable<T> FindAllChildren<T>(DependencyObject depObj) where T : DependencyObject
        {
            if (depObj != null)
            {
                foreach (var child in LogicalTreeHelper.GetChildren(depObj).OfType<DependencyObject>())
                {
                    if (child is T found)
                        yield return found;

                    foreach (var childOfChild in FindAllChildren<T>(child))
                        yield return childOfChild;
                }
            }
        }

        private void ThrowOnCurrentFormError()
        {
            var item = _parent.GetCurrentTabItem();
            if (Validation.GetHasError(item) || FindAllChildren<TextBox>(item).Any(x => Validation.GetHasError(x)))
            {
                throw new InvalidDataException("Invalid data on form");
            }
        }

        public RelayCommand TransactionCommand
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    try
                    {
                        ThrowOnCurrentFormError();

                        Data.TransactionRequest.Track2 = GetAndSaveSelectedTrack2();

                        CheckAddAutoTransactionReference();

                        Data.TransactionRequest.Application = Data.Application;
                        Data.TransactionRequest.PurchaseAnalysisData = GetPad(true);
                        Data.TransactionRequest.TxnRef = Data.TransactionReference;
                        Data.TransactionRequest.ReceiptAutoPrint = Data.PrintMode;
                        Data.TransactionRequest.CutReceipt = Data.CutReceiptMode;

                        // Set date and time for Completion and Voucher transactions
                        if (Data.TransactionRequest.TxnType == TransactionType.Completion
                            || Data.TransactionRequest.TxnType == TransactionType.Voucher)
                        {
                            var dt = DateTime.Now;
                            Data.TransactionRequest.Date = dt;
                            Data.TransactionRequest.Time = dt;
                        }
                        else
                        {
                            Data.TransactionRequest.Date = null;
                            Data.TransactionRequest.Time = null;
                        }

                        await eftw.DoTransaction(Data.TransactionRequest);
                    }
                    catch (Exception ex)
                    {
                        Data.Log(ex.Message);
                    }
                });
            }
        }

        public RelayCommand QueryTransaction
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    try
                    {
                        ThrowOnCurrentFormError();

                        if (!Data.IsETS)
                        {
                            Data.TransactionRequest.Application = TerminalApplication.EFTPOS;
                            Data.Application = TerminalApplication.EFTPOS;
                        }

                        CheckAddAutoTransactionReference();

                        Data.TransactionRequest.TxnRef = Data.TransactionReference;

                        bool oneButton = Data.TransactionRequest.Merchant == "99";
                        await eftw.QueryCard(GetPad(false), Data.SelectedQuery, Data.TransactionRequest.Merchant);

                        if ((Data.LastTxnRespType == nameof(EFTQueryCardResponse)) &&
                             Data.LastTxnResult.TryGetValue("Success", out string result) &&
                             result.Equals("True"))
                        {
                            string originalMerchant  = Data.TransactionRequest.Merchant;
                            PanSource originalPanSource = Data.TransactionRequest.PanSource;

                            if(oneButton)
                            {
                                Data.LastTxnResult.TryGetValue("CardBin", out string id);
                                Data.TransactionRequest.Merchant = id ?? string.Empty;
                            }
                            else if(!string.IsNullOrEmpty(Data.SelectedTrack2))
                            {
                                Data.TransactionRequest.PanSource = PanSource.POSSwiped;
                                Data.TransactionRequest.Track2 = GetAndSaveSelectedTrack2();
                            }
                            else
                            {
                                return;
                            }

                            if(Data.IsWoolworthsPOS)
                            {
                                PadField pf = Data.LastTxnPAD.Clone();
                                AddAutoPadTags(ref pf);
                                Data.TransactionRequest.PurchaseAnalysisData = pf;
                            }
                            else
                            {
                                Data.TransactionRequest.PurchaseAnalysisData = GetPad(true);
                            }

                            await eftw.DoTransaction(Data.TransactionRequest);

                            //Reset fields back
                            Data.TransactionRequest.Merchant = originalMerchant;
                            Data.TransactionRequest.PanSource = originalPanSource;
                        }
                    }
                    catch (Exception ex)
                    {
                        Data.Log(ex.Message);
                    }
                });
            }
        }

        public RelayCommand OneButtonPresetCommand
        {
            get
            {
                return new RelayCommand((o) =>
                {
                    Data.TerminalString = Data.TerminalList.FirstOrDefault(t => t.Contains(TerminalApplication.ETS.ToString()));
                    Data.MerchantNumber = ClientData.ONEBUTTON;
                    Data.TxnTypeIdx = 0; // Redemption (P)
                });
            }
        }

        public RelayCommand EftposPresetCommand
        {
            get
            {
                return new RelayCommand((o) =>
                {
                    Data.TerminalString = Data.TerminalList.FirstOrDefault(t => t.Contains(TerminalApplication.EFTPOS.ToString()));
                    Data.MerchantNumber = "00";
                    Data.TxnTypeIdx = 1; // purchase cash (P)
                });
            }
        }

        public RelayCommand LaunchTrack2
        {
            get
            {
                return new RelayCommand((o) =>
                {
                    PadEditor editor = new PadEditor(TRACK2_FILENAME, "Track2", false);
                    if (editor.ShowDialog() == true)
                    {
                        Data.Track2Items = editor.ViewModel.UpdatedExternalData;
                    }
                });
            }
        }

        public RelayCommand LaunchSlaveEditor
        {
            get
            {
                return new RelayCommand((o) =>
                {
                    PadEditor editor = new PadEditor(SLAVE_CMD_FILENAME, "Slave", false);
                    if (editor.ShowDialog() == true)
                    {
                        Data.CommandsList = editor.ViewModel.UpdatedExternalData;
                    }
                });
            }
        }

        public RelayCommand LaunchPad
        {
            get
            {
                return new RelayCommand((o) =>
                {
                    PadEditor editor = new PadEditor(QPAD_FILENAME);
                    if (editor.ShowDialog() == true)
                    {
                        Data.PadItems = editor.ViewModel.UpdatedExternalData;
                    }
                });
            }
        }

        public RelayCommand LaunchEndpointEditorCommand
        {
            get
            {
                return new RelayCommand((o) =>
                {
                    var editor = new EndpointEditor(ENDPOINTS_FILENAME);
                    if (editor.ShowDialog() == true)
                    {
                        Data.EndPoints = editor.EndPoints;
                        Data.CurrentEndPoint = Data.EndPoints.FirstOrDefault();
                    }
                });
            }
        }

        #endregion

        #region Status
        public RelayCommand StatusCommand
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    await eftw.GetStatus(new EFTStatusRequest { Application = Data.Application, Merchant = Data.MerchantNumber, StatusType = Data.SelectedStatus });
                });
            }
        }

        #endregion

        #region ClientList

        public RelayCommand ClientListCommand
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    await eftw.DoClientList(new EFTClientListRequest());
                });
            }
        }

        #endregion

        #region RawData

        public RelayCommand SendRawData
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    await eftw.DoRawData(Data.RawData, Data.RawDataWait);
                });
            }
        }

        #endregion

        #region Configure Merchant
        public RelayCommand ConfigureMerchant
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    try
                    {
                        ThrowOnCurrentFormError();

                        await eftw.ConfigureMerchant(Data.MerchantDetails);
                    }
                    catch (Exception e)
                    {
                        Data.Log(e.Message);
                    }
                });
            }
        }
        #endregion

        #region Settlement
        public RelayCommand SettlementCommand
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    try
                    {
                        ThrowOnCurrentFormError();

                        await eftw.DoSettlement(Data.SelectedSettlement, Data.CutReceiptMode, GetPad(false), Data.PrintMode, Data.ResetTotals, Data.Application, Data.MerchantNumber);
                    }
                    catch (Exception e)
                    {
                        Data.Log(e.Message);
                    }
                });
            }
        }
        #endregion

        #region Control Panel

        public RelayCommand DisplayControlPanelCommand
        {
            get { return new RelayCommand(async (o) => await eftw.DisplayControlPanel(Data.SelectedDisplay, Data.CutReceiptMode, Data.PrintMode)); }
        }

        #endregion

        #region Query Card

        public RelayCommand QueryCardCommand
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    try
                    {
                        ThrowOnCurrentFormError();

                        await eftw.QueryCard(GetPad(false), Data.SelectedQuery, Data.MerchantNumber, Data.Application);
                    }
                    catch (Exception e)
                    {
                        Data.Log(e.Message);
                    }
                });
            }
        }


        #endregion

        #region Last Transaction

        public RelayCommand LastTransactionCommand
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    await eftw.GetLastTransaction();
                });
            }
        }


        #endregion

        #region Re-print Receipt

        public RelayCommand ReprintReceiptCommand
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    await eftw.LastReceipt(Data.CutReceiptMode, Data.PrintMode, ReprintType.Reprint);
                });
            }
        }

        public RelayCommand GetLastReceiptCommand
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    await eftw.LastReceipt(Data.CutReceiptMode, Data.PrintMode, ReprintType.GetLast);
                });
            }
        }

        #endregion

        #region Verify Cheque

        public RelayCommand VerifyCheque
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    await eftw.DoVerifyCheque(Data.ChequeRequest);
                });
            }
        }


        #endregion

        #region Set Dialog
        public RelayCommand SetDialogCommand
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    await eftw.SetDialog(Data.DialogRequest);
                });
            }
        }

        public RelayCommand HideDialog
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    DialogType t = ((bool)o ? DialogType.Hidden : DialogType.Standard);
                    SetDialogRequest r = new SetDialogRequest
                    {
                        DialogX = Data.DialogRequest.DialogX,
                        DialogY = Data.DialogRequest.DialogY,
                        DialogPosition = Data.DialogRequest.DialogPosition,
                        DialogTitle = Data.DialogRequest.DialogTitle,
                        EnableTopmost = Data.DialogRequest.EnableTopmost,
                        DialogType = t
                    };

                    await eftw.SetDialog(r);
                });
            }
        }


        #endregion

        #region Slave Mode
        public RelayCommand SlaveMode
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    try
                    {
                        ThrowOnCurrentFormError();

                        if (Data.SelectedCommand == null)
                        {
                            ExternalData slaveCmd = new ExternalData(Data.CommandRequest, Data.CommandRequest);
                            Data.CommandsList = PadEditor.AddData(SLAVE_CMD_FILENAME, slaveCmd);
                            Data.SelectedCommand = slaveCmd;
                        }
                        await eftw.DoSlaveMode(Data.CommandRequest);
                    }
                    catch (Exception e)
                    {
                        Data.Log(e.Message);
                    }
                });
            }
        }

        public string SlaveDisplayLinesWidth { get; set; } = "16";
        public string SlaveDisplayLinesText { get; set; } = "THIS IS LINE [XX]";

        private RelayCommand DoSlaveDispLines(int count)
        {
            return new RelayCommand(async (o) =>
            {
                if (!int.TryParse(SlaveDisplayLinesWidth, out int width) || SlaveDisplayLinesText == null)
                    return;

                StringBuilder sb = new StringBuilder($"*@1{count + 1:D2}Z 006{count:D2}{width:D2} 1");

                for (int i = 0; i < count; i++)
                {
                    string text = SlaveDisplayLinesText.Replace("[XX]", $"{i + 1:D2}").PadRight(width).Substring(0, width);
                    sb.Append($"D 020{i:D2}00{text}");
                }

                await eftw.DoSlaveMode(sb.ToString());
            });
        }

        private const string SLAVE_MODE_ENTER         = "*@101" +
                                                            "S1004300 ";
        private const string SLAVE_MODE_EXIT          = "*@101" +
                                                            "S0000";
        private const string SLAVE_MODE_STATUS        = "*@101" +
                                                            "N0000";
        private const string SLAVE_INPUT_ALPHA        = "*@103" +
                                                            "Z 0060416  " +
                                                            "D 0240000ALPHA INPUT         " +
                                                            "EA00800000301";
        private const string SLAVE_INPUT_DEFAULT      = "*@103" +
                                                            "Z 0060416  " +
                                                            "D 0240000DEFAULT INPUT       " +
                                                            "E 00800000301";
        private const string SLAVE_INPUT_AMOUNT       = "*@103" +
                                                            "Z 0060416  " +
                                                            "D 0240000AMOUNT INPUT        " +
                                                            "E$00800000301";
        private const string SLAVE_INPUT_MASKED       = "*@103" +
                                                            "Z 0060416  " +
                                                            "D 0240000ENTER CODE:         " +
                                                            "E*00800000301";
        private const string SLAVE_KEY_ONE            = "*@101" +
                                                            "K100811111111";
        private const string SLAVE_KEY_MANY           = "*@101" +
                                                            "K200811111111";
        private const string SLAVE_KEY_OFF            = "*@101" +
                                                            "K000811111111";
        private const string SLAVE_IMAGE_32x32        = "*@103" +
                                                            "MD002Ti" +
                                                            "MW046Ti\x02\x15\x00\x00\x7E\x7E\x00\x00\x00\x00\x7E\x7E\x42\x42\x42\x42\x42\x42\x72\x72\x72\x72\x7E\x7E\x00\x00\x01\x80\x01\x80\x00\x00\x00\x0C\x00\xF0\x0F\x00\x30\x00\x00\x00\x00\x00" +
                                                            "DI0060000Ti";
        private const string SLAVE_IMAGE_128x64       = "*@104" +
                                                            "MD002Ti" +
                                                            "MW999Ti\x10\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1F\xD7\xBA\xA5\x2A\x78\x67\xF0\x00\x00\x00\x00\x00\x00\x00\x00\x10\x46\x71\x1C\xC7\x29\x24\x10\x00\x00\x00\x00\x00\x00\x00\x00\x17\x46\xDB\x09\x12\x96\x65\xD0\x00\x00\x00\x00\x00\x00\x00\x00\x17\x52\x86\x51\x11\xD0\xA5\xD0\x00\x00\x00\x00\x00\x00\x00\x00\x17\x47\x38\x2F\xFA\x86\x25\xD0\x00\x00\x00\x00\x00\x00\x00\x00\x10\x49\x9A\xDC\x7B\x91\x44\x10\x00\x00\x00\x00\x00\x00\x00\x00\x1F\xD5\x55\x55\x55\x55\x57\xF0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xEF\x54\x7E\x46\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xD7\xF1\x87\xD3\x12\xD8\x90\x00\x00\x00\x00\x00\x00\x00\x00\x14\x87\x5F\x45\x75\x47\x93\x40\x00\x00\x00\x00\x00\x00\x00\x00\x09\x6A\xAF\xE0\x68\x56\xC2\x10\xFD\xF6\x6F\xC3\x06\xCD\xF0\x30\x1D\x84\x0B\xC2\x1F\x2A\x99\x40\x31\x86\x63\x03\x06\xCD\x80\x70\x08\x65\x4D\xB6\xB4\x2E\xBF\x50\x31\x83\xC3\x03\x06\xED\x80\xF0\x10\xAC\xF3\xD1\xD5\x3B\xAA\xA0\x31\xF1\x83\x03\x06\xED\xF0\xB0\x13\xFA\x49\x20\x28\xAE\xBF\xE0\x31\x81\x83\x03\x06\xDD\x80\x30\x09\xA9\xEF\xB9\x2A\x44\x66\xB0\x31\x83\xC3\x03\x06\xDD\x80\x30\x1E\x5F\x01\xBF\x27\x11\xD2\xE0\x31\x86\x63\x03\x06\xCD\x80\x30\x02\x8F\x37\xD7\x99\x44\x97\x70\x31\xF6\x63\x03\xF6\xCD\xF0\x30\x03\xE6\x4F\x21\xAC\x55\x46\x30\x00\x00\x00\x00\x00\x00\x00\x00\x1D\x8C\xE3\xB3\x2F\xBA\x5A\x60\x00\x00\x00\x00\x00\x00\x00\x00\x09\x6E\x3B\xB7\x24\xFE\x3E\x50\x00\x00\x00\x00\x00\x00\x00\x00\x01\x29\x0E\xF2\x95\x8B\x6B\x40\x00\x00\x00\x00\x00\x00\x00\x00\x1B\xF9\x29\x10\xA8\xFE\x7E\x10\x00\x00\x00\x00\x00\x00\x00\x00\x08\x08\x7E\x69\x1A\x48\xA4\x60\x00\x00\x00\x00\x00\x00\x00\x00\x16\x7F\x72\x5F\xE7\x1D\xC1\x50\x00\x00\x00\x00\x00\x00\x00\x00\x1B\x2F\xA4\x13\x9B\x48\x84\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1B\xF5\x9F\x97\xCD\x5D\xFF\x50\x00\x00\x00\x00\x00\x00\x00\x00\x05\x1E\x22\x34\x76\x8A\x51\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1D\x5F\xF8\x3D\x44\xD6\x35\x10\x00\x00\x00\x00\x00\x00\x00\x00\x09\x1A\x0C\xFC\x7A\x83\x51\x40\x00\x00\x00\x00\x00\x00\x00\x00\x1B\xF6\x60\x9F\xF2\xD2\x7F\x90\x00\x00\x00\x00\x00\x00\x00\x00\x0D\x1D\xFC\x2E\x56\x68\x9A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x15\x57\x78\x90\x65\x2D\xD5\x90\x00\x00\x00\x00\x00\x00\x00\x00\x1F\x8A\x6C\x54\x5A\x78\xA1\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x18\x56\x50\x1D\xC2\x6D\xD4\xE0\x00\x00\x00\x00\x00\x00\x00\x00\x06\x9D\x6C\xB7\x7E\x87\x71\xB0\x00\x00\x00\x00\x00\x00\x00\x00\x18\x67\x48\x8E\x4D\xD1\x37\xE0\x00\x00\x00\x00\x00\x00\x00\x00\x0B\x39\x5D\xD3\xBE\x85\x52\x40\x00\x00\x00\x00\x00\x00\x00\x00\x1A\xFD\x70\xA3\x36\xD6\x77\x10\xFD\xF6\x6F\xC3\x06\xCD\xF0\x70\x19\x13\xD1\x27\x35\xA8\x72\x40\x31\x86\x63\x03\x06\xCD\x80\xD8\x01\x62\x54\x94\xEF\xED\x3D\x50\x31\x83\xC3\x03\x06\xED\x80\x18\x1B\xBD\x5D\x5D\x8F\xB8\x59\xA0\x31\xF1\x83\x03\x06\xED\xF0\x18\x1A\x75\x71\x03\x99\xED\x6C\xE0\x31\x81\x83\x03\x06\xDD\x80\x30\x18\x9C\x55\x92\xDD\x44\xE5\xB0\x31\x83\xC3\x03\x06\xDD\x80\x60\x02\x4B\x40\x9A\x55\x11\x04\xE0\x31\x86\x63\x03\x06\xCD\x80\xC0\x1D\x31\x65\xC2\x9A\x44\xA6\x40\x31\xF6\x63\x03\xF6\xCD\xF0\xF8\x14\xF5\x74\x74\x20\x55\x1E\x10\x00\x00\x00\x00\x00\x00\x00\x00\x1F\x2B\x1D\xC8\x1D\x6A\x7E\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7A\x88\xD7\xCB\x2E\x3F\x50\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x2D\xC4\x53\x7B\x71\x90\x00\x00\x00\x00\x00\x00\x00\x00\x1F\xC5\x71\x75\x61\x6E\x75\xF0\x00\x00\x00\x00\x00\x00\x00\x00\x10\x50\x1D\xC4\x5D\xB4\x91\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x17\x51\xBB\xF7\xC5\xB1\xFF\xF0\x00\x00\x00\x00\x00\x00\x00\x00\x17\x4D\x13\xF1\x1A\x94\x85\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x17\x55\xC7\x49\x60\x55\xD3\xD0\x00\x00\x00\x00\x00\x00\x00\x00\x10\x49\xBE\xAF\x7F\x26\x46\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x1F\xCA\xC8\x93\x3A\x62\x14\xF0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +
                                                            "MW031Ti\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" + 
                                                            "DI0060000Ti";
        private const string SLAVE_IMAGE_160x219      = "*@107" + 
                                                            "MD002Ti" +
                                                            "MW999Ti\x14\xDB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFE\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x03\xFF\xF3\x3F\xCF\xCC\xCC\x33\x0C\xCC\x3F\xC0\x3C\x3F\xFF\x00\x00\x02\x40\x00\x03\xFF\xF3\x3F\xCF\xCC\xCC\x33\x0C\xCC\x3F\xC0\x3C\x3F\xFF\x00\x00\x02\x40\x00\x03\x00\x30\x3C\x3F\x03\x03\xF0\xF0\x3F\x0C\xC3\x0C\x30\x03\x00\x00\x02\x40\x00\x03\x00\x30\x3C\x3F\x03\x03\xF0\xF0\x3F\x0C\xC3\x0C\x30\x03\x00\x00\x02\x40\x00\x03\x3F\x30\x3C\xF3\xCF\x00\xC3\x03\x0C\xC3\x3C\x3C\x33\xF3\x00\x00\x02\x40\x00\x03\x3F\x30\x3C\xF3\xCF\x00\xC3\x03\x0C\xC3\x3C\x3C\x33\xF3\x00\x00\x02\x40\x00\x03\x3F\x33\x0C\xC0\x3C\x33\x03\x03\x03\xF3\x00\xCC\x33\xF3\x00\x00\x02\x40\x00\x03\x3F\x33\x0C\xC0\x3C\x33\x03\x03\x03\xF3\x00\xCC\x33\xF3\x00\x00\x02\x40\x00\x03\x3F\x30\x3F\x0F\xC0\x0C\xFF\xFF\xCC\xC0\x3C\x0C\x33\xF3\x00\x00\x02\x40\x00\x03\x3F\x30\x3F\x0F\xC0\x0C\xFF\xFF\xCC\xC0\x3C\x0C\x33\xF3\x00\x00\x02\x40\x00\x03\x00\x30\xC3\xC3\xCC\xF3\xF0\x3F\xCF\xC3\x03\x30\x30\x03\x00\x00\x02\x40\x00\x03\x00\x30\xC3\xC3\xCC\xF3\xF0\x3F\xCF\xC3\x03\x30\x30\x03\x00\x00\x02\x40\x00\x03\xFF\xF3\x33\x33\x33\x33\x33\x33\x33\x33\x33\x33\x3F\xFF\x00\x00\x02\x40\x00\x03\xFF\xF3\x33\x33\x33\x33\x33\x33\x33\x33\x33\x33\x3F\xFF\x00\x00\x02\x40\x00\x00\x00\x00\x03\xFC\xFF\x33\x30\x3F\xFC\x30\x3C\xCC\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x03\xFC\xFF\x33\x30\x3F\xFC\x30\x3C\xCC\x00\x00\x00\x00\x02\x40\x00\x00\x33\xF3\x3F\xFF\x03\xC0\x3F\xF3\x0F\x03\x0C\xF3\xC0\xC3\x00\x00\x02\x40\x00\x00\x33\xF3\x3F\xFF\x03\xC0\x3F\xF3\x0F\x03\x0C\xF3\xC0\xC3\x00\x00\x02\x40\x00\x03\x30\xC0\x3F\x33\xFF\x30\x33\x3F\x33\x30\x3F\xC3\x0F\x30\x00\x00\x02\x40\x00\x03\x30\xC0\x3F\x33\xFF\x30\x33\x3F\x33\x30\x3F\xC3\x0F\x30\x00\x00\x02\x40\x00\x00\xC3\x3C\xCC\xCC\xFF\xFC\x00\x3C\xC0\x33\x3C\xF0" +
                                                            "MW999Ti\x0C\x03\x00\x00\x02\x40\x00\x00\xC3\x3C\xCC\xCC\xFF\xFC\x00\x3C\xC0\x33\x3C\xF0\x0C\x03\x00\x00\x02\x40\x00\x03\xF3\xC0\x30\x00\xCF\xF0\x0C\x03\xFF\x0C\xCC\xC3\xC3\x30\x00\x00\x02\x40\x00\x03\xF3\xC0\x30\x00\xCF\xF0\x0C\x03\xFF\x0C\xCC\xC3\xC3\x30\x00\x00\x02\x40\x00\x00\xC0\x3C\x33\x30\xF3\xCF\x3C\xCF\x30\x0C\xFC\xCF\xFF\x33\x00\x00\x02\x40\x00\x00\xC0\x3C\x33\x30\xF3\xCF\x3C\xCF\x30\x0C\xFC\xCF\xFF\x33\x00\x00\x02\x40\x00\x03\x00\xCC\xF0\xFF\x0F\xF3\x03\xF3\x33\x0F\xCF\xCC\xCC\xCC\x00\x00\x02\x40\x00\x03\x00\xCC\xF0\xFF\x0F\xF3\x03\xF3\x33\x0F\xCF\xCC\xCC\xCC\x00\x00\x02\x40\x00\x03\x0F\xFF\xCC\x30\xC3\x0C\x00\x0C\xC0\xCC\xFC\xCF\xFF\xFC\x00\x00\x02\x40\x00\x03\x0F\xFF\xCC\x30\xC3\x0C\x00\x0C\xC0\xCC\xFC\xCF\xFF\xFC\x00\x00\x02\x40\x00\x00\xC3\xCC\xC3\xFC\xFF\xCF\xC3\x0C\xCC\x30\x30\x3C\x3C\xCF\x00\x00\x02\x40\x00\x00\xC3\xCC\xC3\xFC\xFF\xCF\xC3\x0C\xCC\x30\x30\x3C\x3C\xCF\x00\x00\x02\x40\x00\x03\xFC\x33\xFF\x00\x03\xCF\xFF\x0C\x3F\x03\x03\xF3\x0C\xFC\x00\x00\x02\x40\x00\x03\xFC\x33\xFF\x00\x03\xCF\xFF\x0C\x3F\x03\x03\xF3\x0C\xFC\x00\x00\x02\x40\x00\x00\x0C\xC0\xFF\x0F\x3F\xF3\x3F\xC3\xC3\x30\x30\xC3\x3F\x3F\x00\x00\x02\x40\x00\x00\x0C\xC0\xFF\x0F\x3F\xF3\x3F\xC3\xC3\x30\x30\xC3\x3F\x3F\x00\x00\x02\x40\x00\x00\x0F\xFC\x3C\x30\xFF\x0C\x03\xCC\xF0\x33\x33\x30\x3C\x0F\x00\x00\x02\x40\x00\x00\x0F\xFC\x3C\x30\xFF\x0C\x03\xCC\xF0\x33\x33\x30\x3C\x0F\x00\x00\x02\x40\x00\x03\xF3\xC0\xF0\xFC\x0F\xCF\x0F\x0C\xFF\xCF\xCC\x33\xCC\x3C\x00\x00\x02\x40\x00\x03\xF3\xC0\xF0\xFC\x0F\xCF\x0F\x0C\xFF\xCF\xCC\x33\xCC\x3C\x00\x00\x02\x40\x00\x00\xC3\x3C\xFC\x0F\xCF\xCF\x3F\x0C\x30\xFF\xFC\x0F\xFC\x33\x00\x00\x02\x40\x00\x00\xC3\x3C\xFC\x0F\xCF\xCF\x3F\x0C\x30\xFF\xFC\x0F\xFC\x33\x00\x00\x02\x40\x00\x00\x03\x0C\xC3\x00\xFC\xFF\x0C\xC3\x33\xC0\xCF\x3C\xCF\x30\x00\x00\x02\x40\x00\x00\x03\x0C\xC3\x00\xFC\xFF\x0C\xC3\x33\xC0\xCF\x3C\xCF\x30\x00\x00\x02\x40\x00\x03\xCF\xFF\xC3\x0C\xC3\x03\x00\xCC\xC0\xFF\xFC\x3F\xFC\x03\x00\x00\x02\x40\x00\x03\xCF\xFF\xC3\x0C\xC3\x03\x00\xCC\xC0\xFF\xFC\x3F\xFC\x03\x00\x00\x02\x40\x00\x00\xC0\x00\xC0\x3F\xFC\x3C\xC3\x03\xCC\x30\xC0\xCC\x30\x3C\x00\x00\x02\x40\x00\x00\xC0\x00\xC0\x3F\xFC\x3C\xC3\x03\xCC\x30\xC0\xCC\x30\x3C\x00\x00\x02\x40\x00\x03\x3C\x3F\xFF\x3F\x0C\x33\xFF\xFC\x3F\x03\xF3\xF0\x03\x33\x00\x00\x02\x40\x00\x03\x3C\x3F\xFF\x3F\x0C\x33\xFF\xFC\x3F\x03\xF3\xF0\x03\x33\x00\x00\x02\x40\x00\x03\xCF\x0C\xFF\xCC\x30\x03\x0F\xC3\xCF\x30\xC0\xC0\x30\x00\x00\x00\x02\x40\x00\x03\xCF\x0C\xFF\xCC\x30\x03\x0F\xC3\xCF\x30\xC0\xC0\x30\x00\x00\x00\x02\x40\x00\x03\xCF\xFF\x33\xC3\xFF\xC3\x3F\xF0\xF3\x33\xF3\xFF\xFF\x33\x00\x00\x02\x40\x00\x03\xCF\xFF\x33\xC3\xFF\xC3\x3F\xF0\xF3\x33\xF3\xFF\xFF\x33\x00\x00\x02\x40\x00\x00\x33\x03\xFC\x0C\x0C\x0F\x30\x3F\x3C\xC0\xCC\x33\x03\x00\x00\x00\x02\x40\x00\x00\x33\x03\xFC\x0C\x0C\x0F\x30\x3F\x3C\xC0\xCC\x33\x03\x00\x00\x00\x02\x40\x00\x03\xF3\x33\xFF\xFF\xC0\x0F\xF3\x30\x30\xF3\x3C\x0F\x33\x03\x00\x00\x02\x40\x00\x03\xF3\x33\xFF\xFF\xC0\x0F\xF3\x30\x30\xF3\x3C\x0F\x33\x03\x00\x00\x02\x40\x00\x00\xC3\x03\xCC\x00\xF0\xFF\xF0\x3F\xCC\xC0\x0F\x33\x03\x30\x00\x00\x02\x40\x00\x00\xC3\x03\xCC\x00\xF0\xFF\xF0\x3F\xCC\xC0\x0F\x33\x03\x30\x00\x00\x02\x40\x00\x03\xCF\xFF\x3C\x3C\x00\xC3\xFF\xFF\x0C\xF3\x0C\x3F\xFF\xC3\x00\x00\x02\x40\x00\x03\xCF\xFF\x3C\x3C\x00\xC3\xFF\xFF\x0C\xF3\x0C\x3F\xFF\xC3\x00\x00\x02\x40\x00\x00\xF3\x03\xF3\xFF\xF0\x0C\xFC\x33\x3C\x3C\xC0\xC3\xCC\x00\x00\x00\x02\x40\x00\x00\xF3\x03\xF3\xFF\xF0\x0C\xFC\x33\x3C\x3C\xC0\xC3\xCC\x00\x00\x00\x02\x40\x00\x03\x33\x33\x3F\x3F\xC0\xC3\x00\x3C\x33\x0C\xF3\xF3\x33\xC3\x00\x00\x02\x40\x00\x03\x33\x33\x3F\x3F\xC0\xC3\x00\x3C\x33\x0C\xF3\xF3\x33\xC3\x00\x00\x02\x40\x00\x03\xFF\xC0\xCC\x3C\xF0\x33\x30\x33\xCC\x3F\xC0\xCC\x03\xCC\x00\x00\x02\x40\x00\x03\xFF\xC0\xCC\x3C\xF0\x33\x30\x33\xCC\x3F\xC0\xCC\x03\xCC\x00\x00\x02\x40\x00\x03\xC0\x33\x3C\x33\x00\x03\xF3\xF0\x0C\x3C\xF3\xF3\x30\xFC\x00\x00\x02\x40\x00\x03\xC0\x33\x3C\x33\x00\x03\xF3\xF0\x0C\x3C\xF3\xF3\x30\xFC\x00\x00\x02\x40\x00\x00\x3C\xC3\xF3\x3C\xF0\xCF\x3F\x3F\xFC" +
                                                            "MW999Ti\xC0\x3F\x3F\x03\xCF\x00\x00\x02\x40\x00\x00\x3C\xC3\xF3\x3C\xF0\xCF\x3F\x3F\xFC\xC0\x3F\x3F\x03\xCF\x00\x00\x02\x40\x00\x03\xC0\x3C\x3F\x30\xC0\xC0\xFC\x30\xF3\xF3\x03\x0F\x3F\xFC\x00\x00\x02\x40\x00\x03\xC0\x3C\x3F\x30\xC0\xC0\xFC\x30\xF3\xF3\x03\x0F\x3F\xFC\x00\x00\x02\x40\x00\x00\xCF\x0F\xC3\x33\xF3\xF3\x0F\xCF\xFC\xC0\x33\x33\x0C\x30\x00\x00\x02\x40\x00\x00\xCF\x0F\xC3\x33\xF3\xF3\x0F\xCF\xFC\xC0\x33\x33\x0C\x30\x00\x00\x02\x40\x00\x03\xCC\xFF\xF3\x3F\x00\xCC\x0F\x0F\x3C\xF3\x3C\x3F\x3F\x03\x00\x00\x02\x40\x00\x03\xCC\xFF\xF3\x3F\x00\xCC\x0F\x0F\x3C\xF3\x3C\x3F\x3F\x03\x00\x00\x02\x40\x00\x03\xC3\x03\x0F\xF3\x03\x0C\x3F\x0F\x33\xCC\xC0\x3F\x0C\x30\x00\x00\x02\x40\x00\x03\xC3\x03\x0F\xF3\x03\x0C\x3F\x0F\x33\xCC\xC0\x3F\x0C\x30\x00\x00\x02\x40\x00\x00\x03\x3C\x0C\x33\x30\xC3\x30\xFC\xFF\xFC\xF3\x0F\xF3\x33\x00\x00\x02\x40\x00\x00\x03\x3C\x0C\x33\x30\xC3\x30\xFC\xFF\xFC\xF3\x0F\xF3\x33\x00\x00\x02\x40\x00\x03\xCF\xCF\xF3\x33\xF3\x33\xF3\xC0\xFF\xCF\xC0\x33\xC3\xCC\x00\x00\x02\x40\x00\x03\xCF\xCF\xF3\x33\xF3\x33\xF3\xC0\xFF\xCF\xC0\x33\xC3\xCC\x00\x00\x02\x40\x00\x03\xCC\x3F\x33\x3F\x03\x00\x0F\xC3\xC3\xFC\xF3\x3C\xF0\xFC\x00\x00\x02\x40\x00\x03\xCC\x3F\x33\x3F\x03\x00\x0F\xC3\xC3\xFC\xF3\x3C\xF0\xFC\x00\x00\x02\x40\x00\x03\xC0\xC3\xF0\x33\x33\xC3\x0C\xF3\xF3\x30\x30\xFC\x33\xCF\x00\x00\x02\x40\x00\x03\xC0\xC3\xF0\x33\x33\xC3\x0C\xF3\xF3\x30\x30\xFC\x33\xCF\x00\x00\x02\x40\x00\x00\x0C\x30\xCF\x30\x00\xC3\xCC\x33\x33\x03\x03\x00\x30\xFC\x00\x00\x02\x40\x00\x00\x0C\x30\xCF\x30\x00\xC3\xCC\x33\x33\x03\x03\x00\x30\xFC\x00\x00\x02\x40\x00\x03\xF3\x0F\x03\x3C\x33\xF0\x0C\xC3\xCC\x30\x30\xCC\x3C\x30\x00\x00\x02\x40\x00\x03\xF3\x0F\x03\x3C\x33\xF0\x0C\xC3\xCC\x30\x30\xCC\x3C\x30\x00\x00\x02\x40\x00\x03\x30\xFF\x33\x3F\x30\x3F\x30\x0C\x00\x33\x33\x03\xFC\x03\x00\x00\x02\x40\x00\x03\x30\xFF\x33\x3F\x30\x3F\x30\x0C\x00\x33\x33\x03\xFC\x03\x00\x00\x02\x40\x00\x03\xFF\x0C\xCF\x03\xF3\xF0\xC0\x03\xF3\x3C\xCC\x3F\xFC\x30\x00\x00\x02\x40\x00\x03\xFF\x0C\xCF\x03\xF3\xF0\xC0\x03\xF3\x3C\xCC\x3F\xFC\x30\x00\x00\x02\x40\x00\x00\x00\x3F\xCC\xC0\xC0\xF3\x3F\xF0\xCF\x0C\xFC\x0F\xFF\x33\x00\x00\x02\x40\x00\x00\x00\x3F\xCC\xC0\xC0\xF3\x3F\xF0\xCF\x0C\xFC\x0F\xFF\x33\x00\x00\x02\x40\x00\x00\x00\x03\x03\x0C\xF3\xF0\x30\x33\x0F\x3F\xCF\x3F\x03\xC3\x00\x00\x02\x40\x00\x00\x00\x03\x03\x0C\xF3\xF0\x30\x33\x0F\x3F\xCF\x3F\x03\xC3\x00\x00\x02\x40\x00\x03\xFF\xF0\x33\x3F\x03\x3F\x33\x3C\x03\x3C\xFC\x3F\x33\xFF\x00\x00\x02\x40\x00\x03\xFF\xF0\x33\x3F\x03\x3F\x33\x3C\x03\x3C\xFC\x3F\x33\xFF\x00\x00\x02\x40\x00\x03\x00\x33\x00\x03\xF3\xF0\x30\x33\xF3\xCF\x30\xC3\x03\xCC\x00\x00\x02\x40\x00\x03\x00\x33\x00\x03\xF3\xF0\x30\x33\xF3\xCF\x30\xC3\x03\xCC\x00\x00\x02\x40\x00\x03\x3F\x33\x03\xCF\xCF\xFF\x3F\xF0\x33\xCF\x03\xFF\xFF\xFF\x00\x00\x02\x40\x00\x03\x3F\x33\x03\xCF\xCF\xFF\x3F\xF0\x33\xCF\x03\xFF\xFF\xFF\x00\x00\x02\x40\x00\x03\x3F\x30\xF3\x03\x0F\xFF\x03\x03\xCC\xC3\x30\xC0\x33\xCC\x00\x00\x02\x40\x00\x03\x3F\x30\xF3\x03\x0F\xFF\x03\x03\xCC\xC3\x30\xC0\x33\xCC\x00\x00\x02\x40\x00\x03\x3F\x33\x33\xF0\x3F\x30\xC3\x3C\x00\x33\x33\xF3\x0F\xF3\x00\x00\x02\x40\x00\x03\x3F\x33\x33\xF0\x3F\x30\xC3\x3C\x00\x33\x33\xF3\x0F\xF3\x00\x00\x02\x40\x00\x03\x00\x30\xC3\xCF\xFC\xCC\xFF\x3F\xFF\x0C\x3C\x30\x3C\xCC\x00\x00\x02\x40\x00\x03\x00\x30\xC3\xCF\xFC\xCC\xFF\x3F\xFF\x0C\x3C\x30\x3C\xCC\x00\x00\x02\x40\x00\x03\xFF\xF0\xCC\xF0\xC0\xC3\x0F\x0F\xCC\x3C\x0C\x03\x30\xFF\x00\x00\x02\x40\x00\x03\xFF\xF0\xCC\xF0\xC0\xC3\x0F\x0F\xCC\x3C\x0C\x03\x30\xFF\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00" +
                                                            "MW999Ti\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x4F\x81\xF9\xCF\xBF\xC0\x00\xF1\xCF\xBF\xC0\x00\xF0\xFF\x07\xFE\xFF\x79\xFF\xFA\x46\x00\x60\xC3\x18\xC0\x01\x98\xC3\x18\xC0\x01\x98\x63\x06\x66\x63\x30\xD9\x9A\x46\x00\x60\xE3\x18\x00\x03\x0C\xE3\x18\x00\x03\x0C\x60\x00\x60\x60\x19\x81\x82\x46\x00\x60\xF3\x1B\x00\x03\x0C\xF3\x1B\x00\x03\x0C\x6C\x00\x60\x6C\x0F\x01\x82\x46\x00\x60\xF3\x1F\x00\x03\x0C\xF3\x1F\x00\x03\x0C\x7C\x00\x60\x7C\x06\x01\x82\x46\x00\x60\xDB\x1B\x00\x03\x0C\xDB\x1B\x00\x03\x0C\x6C\x00\x60\x6C\x06\x01\x82\x46\x00\x60\xCF\x18\x00\x03\x0C\xCF\x18\x00\x03\x0C\x60\x00\x60\x60\x0F\x01\x82\x46\x00\x60\xCF\x18\x00\x03\x0C\xCF\x18\x00\x03\x0C\x60\x00\x60\x60\x19\x81\x82\x46\x30\x60\xC7\x18\xC0\x01\x98\xC7\x18\xC0\x01\x98\x60\x00\x60\x63\x30\xC1\x82\x4F\xF1\xF9\xF3\x3F\xC0\x00\xF1\xF3\x3F\xC0\x00\xF0\xF8\x01\xF8\xFF\x79\xE7\xE2\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x4F\x81\xF9\xCF\xBF\xC0\x07\xFF\xC3\x8F\x00\x00\xF0\xFF\x07\xFE\xFF\x79\xFF\xFA\x46\x00\x60\xC3\x18\xC0\x06\x67\x81\x99\x80\x01\x98\x63\x06\x66\x63\x30\xD9\x9A\x46\x00\x60\xE3\x18\x00\x00\x61\x99\xB0\xC0\x03\x0C\x60\x00\x60\x60\x19\x81\x82\x46\x00\x60\xF3\x1B\x00\x00\x61\x99\xB0\xC0\x03\x0C\x6C\x00\x60\x6C\x0F\x01\x82\x46\x00\x60\xF3\x1F\x00\x00\x60\xFF\x30\xC0\x03\x0C\x7C\x00\x60\x7C\x06\x01\x82\x46\x00\x60\xDB\x1B\x00\x00\x60\xFF\x30\xC0\x03\x0C\x6C\x00\x60\x6C\x06\x01\x82\x46\x00\x60\xCF\x18\x00\x00\x60\xFF\x30\xC0\x03\x0C\x60\x00\x60\x60\x0F\x01\x82\x46\x00\x60\xCF\x18\x00\x00\x60\x66\x30\xC0\x03\x0C\x60\x00\x60\x60\x19\x81\x82\x46\x30\x60\xC7\x18\xC0\x00\x60\x66\x19\x80\x01\x98\x60\x00\x60\x63\x30\xC1\x82\x4F\xF1\xF9\xF3\x3F\xC0\x01\xF8\x66\x0F\x00\x00\xF0\xF8\x01\xF8\xFF\x79\xE7\xE2\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00" +
                                                            "MW396Ti\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x7F\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFE\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +
                                                            "DI0060000Ti";
        private const string SLAVE_IMAGE_160x240      = "*@107" +
                                                            "MD002Ti" +
                                                            "MW999Ti\x14\xF0\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xBF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFD\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x1F\xFF\x87\x98\x18\x00\x01\x9E\x00\x1E\x66\x1F\x87\xFF\xE0\x00\x00\x05\xA0\x00\x1F\xFF\x87\x98\x18\x00\x01\x9E\x00\x1E\x66\x1F\x87\xFF\xE0\x00\x00\x05\xA0\x00\x18\x01\x87\x98\x1F\x86\x61\x80\x7E\x06\x00\x19\x86\x00\x60\x00\x00\x05\xA0\x00\x18\x01\x87\x98\x1F\x86\x61\x80\x7E\x06\x00\x19\x86\x00\x60\x00\x00\x05\xA0\x00\x19\xF9\x9F\xE0\x7E\x06\x00\x78\x07\x87\xE6\x7F\x86\x7E\x60\x00\x00\x05\xA0\x00\x19\xF9\x9F\xE0\x7E\x06\x00\x78\x07\x87\xE6\x7F\x86\x7E\x60\x00\x00\x05\xA0\x00\x19\xF9\x9F\x99\x9E\x1E\x07\xE7\x87\x81\x9F\xE1\x86\x7E\x60\x00\x00\x05\xA0\x00\x19\xF9\x9F\x99\x9E\x1E\x07\xE7\x87\x81\x9F\xE1\x86\x7E\x60\x00\x00\x05\xA0\x00\x19\xF9\x86\x18\x78\x07\xE1\xFF\xF8\x19\xFF\x99\x86\x7E\x60\x00\x00\x05\xA0\x00\x19\xF9\x86\x18\x78\x07\xE1\xFF\xF8\x19\xFF\x99\x86\x7E\x60\x00\x00\x05\xA0\x00\x18\x01\x87\x80\x1E\x00\x07\x81\xE1\x81\x87\xFE\x06\x00\x60\x00\x00\x05\xA0\x00\x18\x01\x87\x80\x1E\x00\x07\x81\xE1\x81\x87\xFE\x06\x00\x60\x00\x00\x05\xA0\x00\x1F\xFF\x99\x99\x99\x99\x99\x99\xE6\x66\x66\x66\x67\xFF\xE0\x00\x00\x05\xA0\x00\x1F\xFF\x99\x99\x99\x99\x99\x99\xE6\x66\x66\x66\x67\xFF\xE0\x00\x00\x05\xA0\x00\x00\x00\x00\x66\x00\x67\xFF\x81\xF8\x61\x99\xE0\x60\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x66\x00\x67\xFF\x81\xF8\x61\x99\xE0\x60\x00\x00\x00\x00\x05\xA0\x00\x00\x79\xE1\xF8\x1F\xE0\x61\xFF\xE7\xFF\xE0\x66\x60\x1E\x00\x00\x00\x05\xA0\x00\x00\x79\xE1\xF8\x1F\xE0\x61\xFF\xE7\xFF\xE0\x66\x60\x1E\x00\x00\x00\x05\xA0\x00\x06\x78\x7F\x86\x78\x06\x06\x66\x7F\x99\xF8\x07\x9E\x79\xE0\x00\x00\x05\xA0\x00\x06\x78\x7F\x86\x78\x06\x06\x66\x7F\x99\xF8\x07\x9E\x79\xE0\x00\x00\x05\xA0\x00\x06\x67\xE7\x86\x66\x78\x18\x7F\x99\x87\x9F\x81\x98\x18\x60\x00\x00\x05\xA0\x00\x06\x67\xE7\x86\x66\x78\x18\x7F\x99\x87\x9F\x81\x98\x18\x60\x00\x00\x05\xA0\x00\x01\xE6\x60\x1E\x1E\x18\x1E\x19\x81\x9E\x7E\x06\x01\x81\x80\x00\x00\x05\xA0\x00\x01\xE6\x60\x1E\x1E\x18\x1E\x19\x81\x9E\x7E\x06\x01\x81\x80\x00\x00\x05\xA0\x00\x00\x67\x86\x7F\xE6\x78\x1F\x80\x7F\x98\x06\x00\x66\x7F\xE0\x00\x00\x05\xA0\x00\x00\x67\x86\x7F\xE6\x78\x1F\x80\x7F\x98\x06\x00\x66\x7F\xE0\x00\x00\x05\xA0\x00\x01\xE0\x78\x7E\x18\x61\xE1\xF8\x7F\x86\x67\x80\x7E\x07\xE0\x00\x00\x05\xA0\x00\x01\xE0\x78\x7E\x18\x61\xE1\xF8\x7F\x86\x67\x80\x7E\x07\xE0\x00\x00\x05\xA0\x00\x07\x9F\x80\x66\x66\x66\x67\xE0\x60\x06\x1E\x61\xE0\x7E\x60\x00\x00\x05\xA0\x00\x07\x9F\x80\x66\x66\x66\x67\xE0\x60\x06\x1E\x61\xE0\x7E\x60\x00\x00\x05\xA0\x00\x1F\xE0\x19\xE0\x18\x01\x81\xE7\xE6\x79\xF9\xE6\x78\x66\x00\x00\x00\x05\xA0\x00\x1F\xE0\x19\xE0\x18\x01\x81\xE7\xE6\x79\xF9\xE6\x78" +
                                                            "MW999Ti\x66\x00\x00\x00\x05\xA0\x00\x07\x9F\x98\x18\x7E\x19\x9F\x86\x18\x61\x98\x67\xE0\x67\x80\x00\x00\x05\xA0\x00\x07\x9F\x98\x18\x7E\x19\x9F\x86\x18\x61\x98\x67\xE0\x67\x80\x00\x00\x05\xA0\x00\x06\x1E\x60\x66\x00\x18\x07\x87\xE6\x1F\xE1\x86\x1E\x00\x60\x00\x00\x05\xA0\x00\x06\x1E\x60\x66\x00\x18\x07\x87\xE6\x1F\xE1\x86\x1E\x00\x60\x00\x00\x05\xA0\x00\x1E\x19\x87\x87\xE1\x9E\x06\x78\x07\x9F\xFF\xF9\x9E\x18\x60\x00\x00\x05\xA0\x00\x1E\x19\x87\x87\xE1\x9E\x06\x78\x07\x9F\xFF\xF9\x9E\x18\x60\x00\x00\x05\xA0\x00\x00\x60\x19\xFE\x07\xE0\x01\x9F\xE6\x1E\x67\xFF\x9E\x18\x00\x00\x00\x05\xA0\x00\x00\x60\x19\xFE\x07\xE0\x01\x9F\xE6\x1E\x67\xFF\x9E\x18\x00\x00\x00\x05\xA0\x00\x1F\xE1\x99\xE7\x9E\x18\x7E\x18\x7E\x01\xFE\x79\xE0\x07\x80\x00\x00\x05\xA0\x00\x1F\xE1\x99\xE7\x9E\x18\x7E\x18\x7E\x01\xFE\x79\xE0\x07\x80\x00\x00\x05\xA0\x00\x01\xF8\x19\xFF\xF8\x78\x07\x99\x99\x87\x86\x18\x66\x19\xE0\x00\x00\x05\xA0\x00\x01\xF8\x19\xFF\xF8\x78\x07\x99\x99\x87\x86\x18\x66\x19\xE0\x00\x00\x05\xA0\x00\x1E\x1F\xF9\x80\x18\x79\xF8\x78\x07\x9E\x07\x98\x7E\x78\x60\x00\x00\x05\xA0\x00\x1E\x1F\xF9\x80\x18\x79\xF8\x78\x07\x9E\x07\x98\x7E\x78\x60\x00\x00\x05\xA0\x00\x18\x78\x19\xE1\x86\x1F\xF8\x67\xE7\x9F\xFF\x87\xFF\xE0\x00\x00\x00\x05\xA0\x00\x18\x78\x19\xE1\x86\x1F\xF8\x67\xE7\x9F\xFF\x87\xFF\xE0\x00\x00\x00\x05\xA0\x00\x1F\x87\x99\xFF\x9E\x7F\xF9\x9E\x1F\x99\xE7\xE6\x19\xFF\xE0\x00\x00\x05\xA0\x00\x1F\x87\x99\xFF\x9E\x7F\xF9\x9E\x1F\x99\xE7\xE6\x19\xFF\xE0\x00\x00\x05\xA0\x00\x07\x80\x79\xE1\x86\x7E\x61\x9E\x01\x81\x86\x61\xE1\x80\x60\x00\x00\x05\xA0\x00\x07\x80\x79\xE1\x86\x7E\x61\x9E\x01\x81\x86\x61\xE1\x80\x60\x00\x00\x05\xA0\x00\x19\x9F\xFF\xE1\xFF\x81\x9F\xFF\xE7\xF9\xFF\x87\xFF\xE7\x80\x00\x00\x05\xA0\x00\x19\x9F\xFF\xE1\xFF\x81\x9F\xFF\xE7\xF9\xFF\x87\xFF\xE7\x80\x00\x00\x05\xA0\x00\x1E\x78\x18\x06\x1F\x9E\x07\x81\x98\x67\xFE\x79\xE0\x7F\xE0\x00\x00\x05\xA0\x00\x1E\x78\x18\x06\x1F\x9E\x07\x81\x98\x67\xFE\x79\xE0\x7F\xE0\x00\x00\x05\xA0\x00\x1F\xF9\x98\x18\x00\x01\x9F\x99\x98\x1F\x81\x9E\x66\x78\x60\x00\x00\x05\xA0\x00\x1F\xF9\x98\x18\x00\x01\x9F\x99\x98\x1F\x81\x9E\x66\x78\x60\x00\x00\x05\xA0\x00\x18\x18\x19\xF8\x7E\x60\x61\x81\xE7\x81\xE6\x78\x60\x67\x80\x00\x00\x05\xA0\x00\x18\x18\x19\xF8\x7E\x60\x61\x81\xE7\x81\xE6\x78\x60\x67\x80\x00\x00\x05\xA0\x00\x18\x1F\xFF\x87\x86\x60\x79\xFF\xF8\x67\xE0\x1E\x7F\xE7\xE0\x00\x00\x05\xA0\x00\x18\x1F\xFF\x87\x86\x60\x79\xFF\xF8\x67\xE0\x1E\x7F\xE7\xE0\x00\x00\x05\xA0\x00\x1E\x79\xFF\xFE\x1E\x78\x1F\xE6\x7E\x7E\x1E\x06\x79\xE1\x80\x00\x00\x05\xA0\x00\x1E\x79\xFF\xFE\x1E\x78\x1F\xE6\x7E\x7E\x1E\x06\x79\xE1\x80\x00\x00\x05\xA0\x00\x00\x00\x19\x9E\x18\x7E\x66\x7E\x06\x78\x07\x86\x7F\x86\x60\x00\x00\x05\xA0\x00\x00\x00\x19\x9E\x18\x7E\x66\x7E\x06\x78\x07\x86\x7F\x86\x60\x00\x00\x05\xA0\x00\x1E\x1F\xFE\x01\xE6\x07\xFF\xE7\x9E\x06\x7E\x61\xE7\xE7\x80\x00\x00\x05\xA0\x00\x1E\x1F\xFE\x01\xE6\x07\xFF\xE7\x9E\x06\x7E\x61\xE7\xE7\x80\x00\x00\x05\xA0\x00\x1F\x9E\x60\x07\x9E\x61\xE7\x86\x79\xE1\xE0\x79\x99\x9E\x60\x00\x00\x05\xA0\x00\x1F\x9E\x60\x07\x9E\x61\xE7\x86\x79\xE1\xE0\x79\x99\x9E\x60\x00\x00\x05\xA0\x00\x18\x67\x87\x9F\xF8\x60\x79\x9F\x87\xE7\xF9\xF8\x7E\x66\x00\x00\x00\x05\xA0\x00\x18\x67\x87\x9F\xF8\x60\x79\x9F\x87\xE7\xF9\xF8\x7E\x66\x00\x00\x00\x05\xA0\x00\x1F\x9E\x60\x60\x00\x01\xE7\xF9\x80\x7F\x98\x1F\x86\x18\x60\x00\x00\x05\xA0\x00\x1F\x9E\x60\x60\x00\x01\xE7\xF9\x80\x7F\x98\x1F\x86\x18\x60\x00\x00\x05\xA0\x00\x19\x87\x80\x1E\x1E\x78\x00\x78\x01\x81\xE6\x7F\xF8\x61\x80\x00\x00\x05\xA0\x00\x19\x87\x80\x1E\x1E\x78\x00\x78\x01\x81\xE6\x7F\xF8\x61\x80\x00\x00\x05\xA0\x00\x01\xE6\x61\x80\x1E\x67\xF9\xE7\x99\x86\x67\xF8\x1E\x79\xE0\x00\x00\x05\xA0\x00\x01\xE6\x61\x80\x1E\x67\xF9\xE7\x99\x86\x67\xF8\x1E\x79\xE0\x00\x00\x05\xA0\x00\x00\x67\xE7\x81\xE6\x01\x81\xE1\x86\x7E\x66\x7E\x7F\x9E\x60\x00\x00\x05\xA0\x00\x00\x67\xE7\x81\xE6\x01\x81\xE1\x86\x7E\x66\x7E\x7F\x9E\x60\x00\x00\x05\xA0\x00\x00\x06\x18\x07\xFE\x7E\x06\x7F\x81\x80\x1F\x98\x01\x9E\x00\x00\x00\x05\xA0\x00\x00\x06\x18\x07\xFE\x7E\x06\x7F\x81\x80" +
                                                            "MW999Ti\x1F\x98\x01\x9E\x00\x00\x00\x05\xA0\x00\x18\x07\x99\xFF\x99\xFE\x19\x80\x19\xE6\x07\xFE\x07\x86\x00\x00\x00\x05\xA0\x00\x18\x07\x99\xFF\x99\xFE\x19\x80\x19\xE6\x07\xFE\x07\x86\x00\x00\x00\x05\xA0\x00\x07\xE0\x06\x78\x60\x00\x79\xF8\x67\x81\x98\x66\x61\xE7\x80\x00\x00\x05\xA0\x00\x07\xE0\x06\x78\x60\x00\x79\xF8\x67\x81\x98\x66\x61\xE7\x80\x00\x00\x05\xA0\x00\x07\x81\xF9\xFE\x61\xF8\x19\x81\xFE\x7F\xE1\x98\x18\x1E\x60\x00\x00\x05\xA0\x00\x07\x81\xF9\xFE\x61\xF8\x19\x81\xFE\x7F\xE1\x98\x18\x1E\x60\x00\x00\x05\xA0\x00\x00\x66\x07\xE6\x18\x60\x7F\x99\x86\x79\xF9\xE6\x67\xF9\xE0\x00\x00\x05\xA0\x00\x00\x66\x07\xE6\x18\x60\x7F\x99\x86\x79\xF9\xE6\x67\xF9\xE0\x00\x00\x05\xA0\x00\x19\x87\xFE\x79\x87\x86\x19\xFE\x7F\x87\x9E\x7F\xFF\xF8\x60\x00\x00\x05\xA0\x00\x19\x87\xFE\x79\x87\x86\x19\xFE\x7F\x87\x9E\x7F\xFF\xF8\x60\x00\x00\x05\xA0\x00\x1F\xF8\x01\xE6\x66\x78\x18\x79\xE0\x1E\x7E\x19\x87\xE1\x80\x00\x00\x05\xA0\x00\x1F\xF8\x01\xE6\x66\x78\x18\x79\xE0\x1E\x7E\x19\x87\xE1\x80\x00\x00\x05\xA0\x00\x00\x01\x98\x00\x60\x61\xFF\xFF\x80\x78\x06\x18\x7F\xFF\xE0\x00\x00\x05\xA0\x00\x00\x01\x98\x00\x60\x61\xFF\xFF\x80\x78\x06\x18\x7F\xFF\xE0\x00\x00\x05\xA0\x00\x00\x00\x1E\x61\x80\x01\xF9\x81\x98\x00\x67\x98\x60\x67\x80\x00\x00\x05\xA0\x00\x00\x00\x1E\x61\x80\x01\xF9\x81\x98\x00\x67\x98\x60\x67\x80\x00\x00\x05\xA0\x00\x1F\xFF\x9F\x9E\x18\x67\xFF\x99\xF8\x78\x1E\x79\xE6\x7E\x00\x00\x00\x05\xA0\x00\x1F\xFF\x9F\x9E\x18\x67\xFF\x99\xF8\x78\x1E\x79\xE6\x7E\x00\x00\x00\x05\xA0\x00\x18\x01\x87\xFF\xE0\x60\x7F\x81\x81\x9F\x99\xE7\xE0\x66\x60\x00\x00\x05\xA0\x00\x18\x01\x87\xFF\xE0\x60\x7F\x81\x81\x9F\x99\xE7\xE0\x66\x60\x00\x00\x05\xA0\x00\x19\xF9\x9F\xE6\x00\x60\x19\xFF\x99\xE0\x18\x60\x7F\xE6\x60\x00\x00\x05\xA0\x00\x19\xF9\x9F\xE6\x00\x60\x19\xFF\x99\xE0\x18\x60\x7F\xE6\x60\x00\x00\x05\xA0\x00\x19\xF9\x98\x66\x61\x80\x66\x61\xE7\xFF\x81\x86\x7F\x9E\x00\x00\x00\x05\xA0\x00\x19\xF9\x98\x66\x61\x80\x66\x61\xE7\xFF\x81\x86\x7F\x9E\x00\x00\x00\x05\xA0\x00\x19\xF9\x87\x99\xE7\xFF\xE0\x7F\x99\x86\x7F\xE7\xF8\x67\xE0\x00\x00\x05\xA0\x00\x19\xF9\x87\x99\xE7\xFF\xE0\x7F\x99\x86\x7F\xE7\xF8\x67\xE0\x00\x00\x05\xA0\x00\x18\x01\x80\x01\x98\x7E\x1E\x1E\x07\xF8\x19\xFF\xE0\x07\xE0\x00\x00\x05\xA0\x00\x18\x01\x80\x01\x98\x7E\x1E\x1E\x07\xF8\x19\xFF\xE0\x07\xE0\x00\x00\x05\xA0\x00\x1F\xFF\x80\x79\xE6\x1E\x1F\x98\x00\x78\x00\x78\x79\x9E\x00\x00\x00\x05\xA0\x00\x1F\xFF\x80\x79\xE6\x1E\x1F\x98\x00\x78\x00\x78\x79\x9E\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x07\xFF\x9F\xFC\xE0\x77\xFF\x80\x60\x06\x30\x0C\x7F\xF0\x00\x60\x00\x00\x05\xA0\x07\xFF\x9F\xFC\x70\xE7\xFF\x80\x60\x06\x38\x0C\x7F\xF0\x00\x60\x00\x00\x05\xA0\x00\x30\x18\x00\x30\xC0\x30\x00\x60\x06\x3C\x0C\x60\x00\x01\xE0\x00\x00\x05\xA0\x00\x30\x18\x00\x19\x80\x30\x00\x60\x06\x3C\x0C\x60\x00\x03\xE0\x00\x00\x05\xA0\x00\x30\x18\x00\x19\x80\x30\x00" +
                                                            "MW999Ti\x60\x06\x36\x0C\x60\x00\x06\x60\x00\x00\x05\xA0\x00\x30\x18\x00\x0F\x00\x30\x00\x60\x06\x33\x0C\x60\x00\x00\x60\x00\x00\x05\xA0\x00\x30\x1F\xF8\x06\x00\x30\x00\x60\x06\x33\x0C\x7F\xE0\x00\x60\x00\x00\x05\xA0\x00\x30\x1F\xF8\x0F\x00\x30\x00\x60\x06\x31\x8C\x7F\xE0\x00\x60\x00\x00\x05\xA0\x00\x30\x18\x00\x0F\x00\x30\x00\x60\x06\x30\xCC\x60\x00\x00\x60\x00\x00\x05\xA0\x00\x30\x18\x00\x1B\x80\x30\x00\x60\x06\x30\xCC\x60\x00\x00\x60\x00\x00\x05\xA0\x00\x30\x18\x00\x39\xC0\x30\x00\x60\x06\x30\x6C\x60\x00\x00\x60\x00\x00\x05\xA0\x00\x30\x18\x00\x30\xC0\x30\x00\x60\x06\x30\x3C\x60\x00\x00\x60\x00\x00\x05\xA0\x00\x30\x18\x00\x60\x60\x30\x00\x60\x06\x30\x3C\x60\x00\x00\x60\x00\x00\x05\xA0\x00\x30\x1F\xFC\xE0\x70\x30\x00\x7F\xC6\x30\x1C\x7F\xF0\x00\x60\x00\x00\x05\xA0\x00\x30\x1F\xFD\xC0\x38\x30\x00\x7F\xC6\x30\x0C\x7F\xF0\x00\x60\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x07\xFF\x9F\xFC\xE0\x77\xFF\x80\x60\x06\x30\x0C\x7F\xF0\x03\xF0\x00\x00\x05\xA0\x07\xFF\x9F\xFC\x70\xE7\xFF\x80\x60\x06\x38\x0C\x7F\xF0\x07\xF8\x00\x00\x05\xA0\x00\x30\x18\x00\x30\xC0\x30\x00\x60\x06\x3C\x0C\x60\x00\x0E\x1C\x00\x00\x05\xA0\x00\x30\x18\x00\x19\x80\x30\x00\x60\x06\x3C\x0C\x60\x00\x0C\x0C\x00\x00\x05\xA0\x00\x30\x18\x00\x19\x80\x30\x00\x60\x06\x36\x0C\x60\x00\x00\x0C\x00\x00\x05\xA0\x00\x30\x18\x00\x0F\x00\x30\x00\x60\x06\x33\x0C\x60\x00\x00\x0C\x00\x00\x05\xA0\x00\x30\x1F\xF8\x06\x00\x30\x00\x60\x06\x33\x0C\x7F\xE0\x00\x18\x00\x00\x05\xA0\x00\x30\x1F\xF8\x0F\x00\x30\x00\x60\x06\x31\x8C\x7F\xE0\x00\x18\x00\x00\x05\xA0\x00\x30\x18\x00\x0F\x00\x30\x00\x60\x06\x30\xCC\x60\x00\x00\x30\x00\x00\x05\xA0\x00\x30\x18\x00\x1B\x80\x30\x00\x60\x06\x30\xCC\x60\x00\x00\xE0\x00\x00\x05\xA0\x00\x30\x18\x00\x39\xC0\x30\x00\x60\x06\x30\x6C\x60\x00\x01\xC0\x00\x00\x05\xA0\x00\x30\x18\x00\x30\xC0\x30\x00\x60\x06\x30\x3C\x60\x00\x03\x00\x00\x00\x05\xA0\x00\x30\x18\x00\x60\x60\x30\x00\x60\x06\x30\x3C\x60\x00\x06\x00\x00\x00\x05\xA0\x00\x30\x1F\xFC\xE0\x70\x30\x00\x7F\xC6\x30\x1C\x7F\xF0\x0F\xFC\x00\x00\x05\xA0\x00\x30\x1F\xFD\xC0\x38\x30\x00\x7F\xC6\x30\x0C\x7F\xF0\x0F\xFC\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x07\xFF\x9F\xFC\xE0\x77\xFF\x80\x60\x06\x30\x0C\x7F\xF0\x03\xE0\x00\x00\x05\xA0\x07\xFF\x9F\xFC\x70\xE7\xFF\x80\x60\x06\x38\x0C\x7F\xF0\x07\xF0\x00\x00\x05\xA0\x00\x30\x18\x00\x30\xC0\x30\x00\x60\x06\x3C\x0C\x60\x00\x0E\x38\x00\x00\x05\xA0\x00\x30\x18\x00\x19\x80\x30\x00\x60\x06\x3C\x0C\x60\x00\x0C\x18\x00\x00\x05\xA0\x00\x30\x18\x00\x19\x80\x30\x00\x60\x06\x36\x0C\x60\x00\x00\x18\x00\x00\x05\xA0\x00\x30\x18\x00\x0F\x00\x30\x00\x60\x06\x33\x0C\x60\x00\x00\x30\x00\x00\x05\xA0\x00\x30\x1F\xF8\x06" +
                                                            "MW816Ti\x00\x30\x00\x60\x06\x33\x0C\x7F\xE0\x00\xE0\x00\x00\x05\xA0\x00\x30\x1F\xF8\x0F\x00\x30\x00\x60\x06\x31\x8C\x7F\xE0\x00\xF8\x00\x00\x05\xA0\x00\x30\x18\x00\x0F\x00\x30\x00\x60\x06\x30\xCC\x60\x00\x00\x1C\x00\x00\x05\xA0\x00\x30\x18\x00\x1B\x80\x30\x00\x60\x06\x30\xCC\x60\x00\x00\x0C\x00\x00\x05\xA0\x00\x30\x18\x00\x39\xC0\x30\x00\x60\x06\x30\x6C\x60\x00\x00\x0C\x00\x00\x05\xA0\x00\x30\x18\x00\x30\xC0\x30\x00\x60\x06\x30\x3C\x60\x00\x0C\x0C\x00\x00\x05\xA0\x00\x30\x18\x00\x60\x60\x30\x00\x60\x06\x30\x3C\x60\x00\x0E\x18\x00\x00\x05\xA0\x00\x30\x1F\xFC\xE0\x70\x30\x00\x7F\xC6\x30\x1C\x7F\xF0\x07\xF8\x00\x00\x05\xA0\x00\x30\x1F\xFD\xC0\x38\x30\x00\x7F\xC6\x30\x0C\x7F\xF0\x03\xE0\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x07\xFF\x9F\xFC\xE0\x77\xFF\x80\x60\x06\x30\x0C\x7F\xF0\x00\x10\x00\x00\x05\xA0\x07\xFF\x9F\xFC\x70\xE7\xFF\x80\x60\x06\x38\x0C\x7F\xF0\x00\x30\x00\x00\x05\xA0\x00\x30\x18\x00\x30\xC0\x30\x00\x60\x06\x3C\x0C\x60\x00\x00\x70\x00\x00\x05\xA0\x00\x30\x18\x00\x19\x80\x30\x00\x60\x06\x3C\x0C\x60\x00\x00\xF0\x00\x00\x05\xA0\x00\x30\x18\x00\x19\x80\x30\x00\x60\x06\x36\x0C\x60\x00\x01\xB0\x00\x00\x05\xA0\x00\x30\x18\x00\x0F\x00\x30\x00\x60\x06\x33\x0C\x60\x00\x01\xB0\x00\x00\x05\xA0\x00\x30\x1F\xF8\x06\x00\x30\x00\x60\x06\x33\x0C\x7F\xE0\x03\x30\x00\x00\x05\xA0\x00\x30\x1F\xF8\x0F\x00\x30\x00\x60\x06\x31\x8C\x7F\xE0\x06\x30\x00\x00\x05\xA0\x00\x30\x18\x00\x0F\x00\x30\x00\x60\x06\x30\xCC\x60\x00\x0C\x30\x00\x00\x05\xA0\x00\x30\x18\x00\x1B\x80\x30\x00\x60\x06\x30\xCC\x60\x00\x0F\xFC\x00\x00\x05\xA0\x00\x30\x18\x00\x39\xC0\x30\x00\x60\x06\x30\x6C\x60\x00\x0F\xFC\x00\x00\x05\xA0\x00\x30\x18\x00\x30\xC0\x30\x00\x60\x06\x30\x3C\x60\x00\x00\x30\x00\x00\x05\xA0\x00\x30\x18\x00\x60\x60\x30\x00\x60\x06\x30\x3C\x60\x00\x00\x30\x00\x00\x05\xA0\x00\x30\x1F\xFC\xE0\x70\x30\x00\x7F\xC6\x30\x1C\x7F\xF0\x00\x30\x00\x00\x05\xA0\x00\x30\x1F\xFD\xC0\x38\x30\x00\x7F\xC6\x30\x0C\x7F\xF0\x00\x30\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xBF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFD\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF" +
                                                            "DI0060000Ti";
        private const string SLAVE_IMAGE_120x160      = "*@105" +
                                                            "MD002Ti" +
                                                            "MW999Ti\x0F\xA0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1F\xFF\x80\x18\x1F\x86\x60\x06\x1E\x7F\xF9\xE1\xE1\xFF\xF8\x1F\xFF\x80\x18\x1F\x86\x60\x06\x1E\x7F\xF9\xE1\xE1\xFF\xF8\x18\x01\x99\xE7\xF9\xE1\x86\x61\xF8\x18\x1F\x86\x61\x80\x18\x18\x01\x99\xE7\xF9\xE1\x86\x61\xF8\x18\x1F\x86\x61\x80\x18\x19\xF9\x80\x61\x9F\x87\xE7\x86\x06\x7F\xE1\x99\xE1\x9F\x98\x19\xF9\x80\x61\x9F\x87\xE7\x86\x06\x7F\xE1\x99\xE1\x9F\x98\x19\xF9\x98\x67\xE1\xE1\x99\xE0\x78\x19\x9F\xE0\x61\x9F\x98\x19\xF9\x98\x67\xE1\xE1\x99\xE0\x78\x19\x9F\xE0\x61\x9F\x98\x19\xF9\x80\x78\x1F\x86\x67\xFF\x9E\x7F\xF9\xFE\x61\x9F\x98\x19\xF9\x80\x78\x1F\x86\x67\xFF\x9E\x7F\xF9\xFE\x61\x9F\x98\x18\x01\x9E\x67\xF9\xE1\x87\x81\xF8\x18\x1F\x87\x81\x80\x18\x18\x01\x9E\x67\xF9\xE1\x87\x81\xF8\x18\x1F\x87\x81\x80\x18\x1F\xFF\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\xFF\xF8\x1F\xFF\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\x99\xFF\xF8\x00\x00\x07\x99\x9F\x87\xE1\x81\x81\xF8\x66\x66\x60\x00\x00\x00\x00\x07\x99\x9F\x87\xE1\x81\x81\xF8\x66\x66\x60\x00\x00\x1F\xF9\xFE\x1F\x81\x81\xF9\xFF\xFF\x9E\x18\x00\x1E\x66\x60\x1F\xF9\xFE\x1F\x81\x81\xF9\xFF\xFF\x9E\x18\x00\x1E\x66\x60\x07\xF8\x1F\x80\x67\xFE\x1F\x86\x19\xF8\x7E\x66\x60\x00\x00\x07\xF8\x1F\x80\x67\xFE\x1F\x86\x19\xF8\x7E\x66\x60\x00\x00\x07\xF9\x87\xF8\x06\x1E\x79\xE1\xFE\x1E\x19\x80\x06\x61\xF8\x07\xF9\x87\xF8\x06\x1E\x79\xE1\xFE\x1E\x19\x80\x06\x61\xF8\x06\x1E\x79\x9E\x60\x78\x1F\x81\xE1\x98\x06\x00\x60\x7F\x98\x06\x1E\x79\x9E\x60\x78\x1F\x81\xE1\x98\x06\x00\x60\x7F\x98\x06\x19\x99\xE0\x06\x06\x78\x67\x87\xE6\x66\x7F\x86\x66\x78\x06\x19\x99\xE0\x06\x06\x78\x67\x87\xE6\x66\x7F\x86\x66\x78\x00\x66\x79\x9E\x61\xF8\x1F\x81\xE1\x80\x07\x98\x78\x7E\x60\x00\x66\x79\x9E\x61\xF8\x1F\x81\xE1\x80\x07\x98\x78\x7E\x60\x1E\x1F\xFE\x00\x06\x1E\x79\xE7\x86\x66\x60\x79\xFE\x78\x00\x1E\x1F\xFE\x00\x06\x1E\x79\xE7\x86\x66\x60\x79\xFE\x78\x00\x01\x86\x60\x7E\x60\x78\x1F\x81\xE1\x98\x06\x06\x7F\x86\x60\x01\x86\x60\x7E\x60\x78\x1F\x81\xE1\x98\x06\x06\x7F\x86\x60\x01\xFF\xE1\xF8\x06\x06\x78\x67\x87\xE6\x60\x78\x19\xE1\x80\x01\xFF\xE1\xF8\x06\x06\x78\x67\x87\xE6\x60\x78\x19\xE1\x80\x00\x7E\x60\x1E\x61\xF8\x1F\x81\xE1\x80\x06\x1E\x67\x86\x60\x00\x7E\x60\x1E\x61\xF8\x1F\x81\xE1\x80\x06\x1E\x67\x86\x60\x19\xF9\x80\x1F\x86\x1E\x79\xE7\x86\x66\x61\xF8\x00\x60\x00\x19\xF9\x80\x1F\x86\x1E\x79\xE7\x86\x66\x61\xF8\x00\x60\x00\x18\x66\x01\xF9\xE0\x78\x1F\xE1\xE1\x98\x06\x1E\x67\xE6\x60\x18\x66\x01\xF9\xE0\x78\x1F\xE1\xE1\x98\x06\x1E\x67\xE6\x60\x1E\x07\xE0\x67\x86\x06\x78\x1F\x87\xE6\x60\x60\x7F\x99\x80\x1E\x07\xE0\x67\x86\x06\x78\x1F\x87\xE6\x60\x60\x7F\x99\x80\x06\x00\x01\x80\x61\xF8\x18\x79\xE1\x80\x06\x1E\x18\x79\x98\x06\x00\x01\x80\x61\xF8\x18\x79\xE1\x80\x06\x1E\x18\x79\x98\x18\x1F\xF8\x67\x86\x1E\x7E\x1F\x86\x66\x61\xF8\x79\x9F\xE0\x18\x1F\xF8\x67\x86\x1E\x7E\x1F\x86\x66\x61\xF8\x79\x9F\xE0\x01\x80\x07\x80\x60\x78\x18\x61\xE6\x1F\x81\x81\x9F\xE1\x80\x01\x80\x07\x80\x60\x78\x18\x61\xE6\x1F\x81\x81\x9F\xE1\x80\x19\x81\x98\x79\xE6\x66\x1E\x1F\x80\x61\xE7\xFF\xF9\x9F\xE0\x19\x81\x98\x79\xE6\x66\x1E\x1F\x80\x61\xE7\xFF\xF9\x9F\xE0\x01\x9E\x78\x00\x19\x80\x60\x79\xE6\x07\x81\x99\x9F\xFF\xE0\x01\x9E\x78\x00\x19\x80\x60\x79\xE6\x07\x81\x99\x9F\xFF\xE0\x00\x1F\xFF\x81\xF9\xE1\x81\xFF\x80\x60\x67\xFE\x7F\xF9\x80\x00\x1F\xFF\x81\xF9\xE1\x81\xFF\x80\x60\x67\xFE\x7F\xF9\x80\x07\xF8\x19\xE6\x1F\x87\xE7\x81\x86\x7F\xE6\x60\x18\x1F\xE0\x07\xF8\x19\xE6\x1F\x87\xE7\x81\x86\x7F\xE6\x60\x18\x1F\xE0\x1E\x79\x99\xF8\x61\xE1\x99\x99\xF8\x19\x9F\x86\x19\x9E\x00\x1E\x79\x99\xF8\x61\xE1\x99\x99\xF8\x19\x9F\x86\x19\x9E\x00\x18\x78\x18\x1F\x9F\x86\x61\x81\x9E\x7F\xF9\xE0\x18\x19\x80\x18\x78\x18\x1F\x9F\x86\x61\x81\x9E\x7F\xF9\xE0\x18\x19\x80\x07\x9F\xF9\xF8\x79\xE1\x81\xFF\xF8\x18\x19\x81\x9F\xFF\xF8\x07\x9F\xF9\xF8\x79\xE1\x81\xFF\xF8\x18\x19\x81\x9F\xFF\xF8\x07\xF8\x66\x06\x1F\x87\xE1\x9F\x86\x7F\xE1\xE1\xE0\x19\x98\x07\xF8\x66\x06\x1F\x87\xE1\x9F\x86\x7F\xE1\xE1\xE0\x19\x98\x00\x7F\x80\x60\x61" +
                                                            "MW999Ti\xE1\x98\x66\x78\x19\x9F\x87\x87\x9F\xF8\x00\x7F\x80\x60\x61\xE1\x98\x66\x78\x19\x9F\x87\x87\x9F\xF8\x1E\x66\x18\x06\x1F\x86\x61\x98\x1E\x7F\xF9\xE1\xF9\xE1\x80\x1E\x66\x18\x06\x1F\x86\x61\x98\x1E\x7F\xF9\xE1\xF9\xE1\x80\x19\x87\x81\xE0\x79\xE1\x80\x7E\x78\x18\x1F\x86\x07\x9F\xF8\x19\x87\x81\xE0\x79\xE1\x80\x7E\x78\x18\x1F\x86\x07\x9F\xF8\x07\xE6\x66\x79\x9F\x87\xE1\x99\x86\x7F\xE1\x99\x98\x61\x98\x07\xE6\x66\x79\x9F\x87\xE1\x99\x86\x7F\xE1\x99\x98\x61\x98\x01\x81\x86\x66\x61\xE1\x98\x66\x78\x19\x9F\x87\x80\x67\xF8\x01\x81\x86\x66\x61\xE1\x98\x66\x78\x19\x9F\x87\x80\x67\xF8\x1E\x66\x01\xFF\x9F\x86\x61\x98\x1E\x7F\xF9\xF9\x9E\x1E\x60\x1E\x66\x01\xFF\x9F\x86\x61\x98\x1E\x7F\xF9\xF9\x9E\x1E\x60\x07\x9F\xF9\xF8\x79\xE1\x80\x7E\x78\x18\x1F\x86\x18\x78\x00\x07\x9F\xF9\xF8\x79\xE1\x80\x7E\x78\x18\x1F\x86\x18\x78\x00\x00\x7E\x78\x79\x9F\x87\xE7\x99\x81\xF8\x66\x66\x06\x1E\x00\x00\x7E\x78\x79\x9F\x87\xE7\x99\x81\xF8\x66\x66\x06\x1E\x00\x06\x67\xF9\xE1\x81\x81\xFF\x86\x7F\x9E\x18\x00\x7F\x81\x80\x06\x67\xF9\xE1\x81\x81\xFF\x86\x7F\x9E\x18\x00\x7F\x81\x80\x06\x1E\x78\x78\x67\xFE\x1E\x60\x19\xF8\x7E\x66\x67\xE7\x80\x06\x1E\x78\x78\x67\xFE\x1E\x60\x19\xF8\x7E\x66\x67\xE7\x80\x00\x7F\x9F\xE6\x06\x1E\x79\x86\x7E\x1E\x19\x80\x7E\x01\xF8\x00\x7F\x9F\xE6\x06\x1E\x79\x86\x7E\x1E\x19\x80\x7E\x01\xF8\x00\x1E\x7F\x86\x60\x78\x1E\x61\xE1\x98\x06\x06\x07\xE7\x98\x00\x1E\x7F\x86\x60\x78\x1E\x61\xE1\x98\x06\x06\x07\xE7\x98\x1F\xE7\xE1\x81\x86\x06\x7F\x86\x07\xE6\x60\x7E\x78\x06\x78\x1F\xE7\xE1\x81\x86\x06\x7F\x86\x07\xE6\x60\x7E\x78\x06\x78\x01\x9E\x00\x60\x61\xF8\x1E\x60\x61\x80\x06\x18\x66\x66\x60\x01\x9E\x00\x60\x61\xF8\x1E\x60\x61\x80\x06\x18\x66\x66\x60\x19\x87\x98\x66\x06\x1E\x79\x86\x06\x66\x61\xFF\xF8\x00\x00\x19\x87\x98\x66\x06\x1E\x79\x86\x06\x66\x61\xFF\xF8\x00\x00\x1F\xF8\x07\x81\xE0\x78\x1E\x61\xE1\x98\x06\x06\x66\x66\x60\x1F\xF8\x07\x81\xE0\x78\x1E\x61\xE1\x98\x06\x06\x66\x66\x60\x00\x01\xF9\xFF\x86\x06\x7F\xFF\x87\xE6\x60\x78\x1F\xF9\x80\x00\x01\xF9\xFF\x86\x06\x7F\xFF\x87\xE6\x60\x78\x1F\xF9\x80\x00\x00\x18\x7F\xE1\xF8\x1F\x81\xE1\x80\x06\x1E\x18\x1E\x60\x00\x00\x18\x7F\xE1\xF8\x1F\x81\xE1\x80\x06\x1E\x18\x1E\x60\x1F\xFF\x99\xE6\x06\x1E\x79\x99\x86\x66\x61\xF8\x19\x98\x00\x1F\xFF\x99\xE6\x06\x1E\x79\x99\x86\x66\x61\xF8\x19\x98\x00\x18\x01\x87\x87\xE0\x78\x1F\x81\xE1\x98\x06\x7E\x18\x1E\x60\x18\x01\x87\x87\xE0\x78\x1F\x81\xE1\x98\x06\x7E\x18\x1E\x60\x19\xF9\x9E\x1E\x06\x06\x7F\xFF\x87\xE6\x60\x60\x1F\xF9\x80\x19\xF9\x9E\x1E\x06\x06\x7F\xFF\x87\xE6\x60\x60\x1F\xF9\x80\x19\xF9\x9F\xE1\xE1\xF8\x18\x01\xE1\x80\x06\x7E\x18\x19\x80\x19\xF9\x9F\xE1\xE1\xF8\x18\x01\xE1\x80\x06\x7E\x18\x19\x80\x19\xF9\x99\xFF\x86\x1E\x7F\xE7\x86\x66\x61\xF8\x66\x07\x80\x19\xF9\x99\xFF\x86\x1E\x7F\xE7\x86\x66\x61\xF8\x66\x07\x80\x18\x01\x9E\x66\x60\x78\x19\x81\xE6\x1F\x81\x81\x80\x61\x80\x18\x01\x9E\x66\x60\x78\x19\x81\xE6\x1F\x81\x81\x80\x61\x80\x1F\xFF\x9E\x07\xE6\x66\x1F\xE7\x80\x61\xE7\xFF\xE6\x67\xE0\x1F\xFF\x9E\x07\xE6\x66\x1F\xE7\x80\x61\xE7\xFF\xE6\x67\xE0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0F\xC0\x3E\x00\xE0\x38\x30\x00\xF8\x1F\xF0\x00\x00\x00\x00\x1C\xE0\x77\x00\xE0\x38\x30\x03\x9E\x1F\xF8\x00\x00\x00\x00\x18\x70\xC1\x81\xF0\x3C\x30\x07\x06\x18\x18\x00\x00\x00\x00\x18\x01\x81\x01\xB0\x3C\x30\x06\x03\x18\x18\x00\x00\x00\x00\x1C\x01\x80\x01\xB8\x36\x30\x04\x03\x18\x18\x00\x00\x00\x00\x0F\x81\x80\x03\x18\x37\x30\x0C\x03\x1C\x38\x00\x00\x00\x00\x03\xE1\x80\x03\x18\x33\x30\x0C\x01\x1F\xE0\x00\x00\x00\x00\x00\x71\x80\x07\x0C\x31\xB0\x04\x03\x18\xC0\x00\x00\x00\x00\x00\x31\x80\x07\xFC\x31\xF0\x06\x03\x18\x60\x00\x00\x00\x00\x30\x31\x81\x87\xFE\x30\xF0\x06\x33\x18\x30\x00\x00\x00\x00\x18\x30\xC3\x8C\x06\x30\xF0\x03\x1E\x18\x18\x00\x00\x00\x00\x1F\xE0\x7F\x0C\x07\x30\x70\x01\xFE\x18" +
                                                            "MW410Ti\x1C\x00\x00\x00\x00\x07\x80\x1C\x1C\x03\x30\x30\x00\x73\x98\x0C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xE0\x1F\x81\xFC\x0F\xF8\x00\x00\x00\x00\x00\x00\x00\x00\x0E\x70\x79\xC1\xFF\x0F\xF8\x00\x00\x00\x00\x00\x00\x00\x00\x18\x38\x60\x61\x83\x0C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18\x00\xC0\x61\x81\x8C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xC0\x31\x81\x8C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x30\x00\xC0\x31\x81\x8F\xF8\x00\x00\x00\x00\x00\x00\x00\x00\x30\x00\xC0\x31\x81\x8F\xF8\x00\x00\x00\x00\x00\x00\x00\x00\x30\x00\xC0\x31\x81\x8C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xC0\x31\x81\x8C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18\x18\xE0\x61\x81\x8C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0C\x30\x60\xE1\x83\x0C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xF0\x3F\x81\xFE\x0F\xFC\x00\x00\x00\x00\x00\x00\x00\x00\x01\xC0\x0E\x01\xF0\x0F\xFC\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" +
                                                            "DI0060000Ti";
        private const string SLAVE_DISPLAY_SWIPE      = "*@102" +
                                                            "J1000" +
                                                            "K100810000010";
        private const string SLAVE_DISPLAY_SWIPE_DISP = "*@106" +
                                                            "S1004300 " +
                                                            "Z 0060216  " +
                                                            "D 0200000   SWIPE CARD   " +
                                                            "D 0200100   ON  PINPAD   " +
                                                            "J1000" +
                                                            "K100800001010";
        private const string SLAVE_DISPLAY_APP_HUB    = "*@111" +
                                                            "ZH0070920101" +
                                                            "D 0240000SELECT PAYMENT TYPE:" +
                                                            "D 024010065|AfterPay         " +
                                                            "D 024020089|Zip              " +
                                                            "D 024030067|Humm             " +
                                                            "D 024040072|OpenPay          " +
                                                            "D 024050066|Alipay           " +
                                                            "D 024060069|WeChat Pay       " +
                                                            "D 024070070|Klarna           " +
                                                            "D 024080062|QantasPoints     " +
                                                            "K200811111111";
        private const string SLAVE_DISPLAY_MENU       = "*@112" +
                                                            "ZM006102010" +
                                                            "D 0240000SELECT MENU ITEM:   " +
                                                            "D 0240100MENU ITEM 1         " +
                                                            "D 0240200MENU ITEM 2         " +
                                                            "D 0240300MENU ITEM 3         " +
                                                            "D 0240400MENU ITEM 4         " +
                                                            "D 0240500MENU ITEM 5         " +
                                                            "D 0240600MENU ITEM 6         " +
                                                            "D 0240700MENU ITEM 7         " +
                                                            "D 0240800MENU ITEM 8         " +
                                                            "D 0240900MENU ITEM 9         " +
                                                            "K200811111111";
        private const string SLAVE_DISPLAY_QR1        = "*@107" +
                                                            "MD002Tq" +
                                                            "MW018TqCan You Read QR?" +
                                                            "ZQ0070716101" +
                                                            "D 024030HTq                  " +
                                                            "D 0240400LINE 3 EXAMPLE      " +
                                                            "D 0240500LINE 4 EXAMPLE      " +
                                                            "K200811111111";
        private const string SLAVE_DISPLAY_QR2        = "*@107" +
                                                            "MD002Tq" +
                                                            "MW018TqCan You Read QR?" +
                                                            "ZQ0070716101" +
                                                            "D 024030HTq                  " +
                                                            "D 0240400LINE 3 EXAMPLE      " +
                                                            "D 0240500LINE 4 EXAMPLE      " +
                                                            "K200811111111";

        public RelayCommand SlaveModeEnterCommand           => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_MODE_ENTER));
        public RelayCommand SlaveModeExitCommand            => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_MODE_EXIT));
        public RelayCommand SlaveModeStatusCommand          => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_MODE_STATUS));
        public RelayCommand SlaveInputAlphaCommand          => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_INPUT_ALPHA));
        public RelayCommand SlaveInputDefaultCommand        => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_INPUT_DEFAULT));
        public RelayCommand SlaveInputAmountCommand         => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_INPUT_AMOUNT));
        public RelayCommand SlaveInputMaskedCommand         => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_INPUT_MASKED));
        public RelayCommand SlaveDisplayLines2Command       => DoSlaveDispLines(2);
        public RelayCommand SlaveDisplayLines3Command       => DoSlaveDispLines(3);
        public RelayCommand SlaveDisplayLines4Command       => DoSlaveDispLines(4);
        public RelayCommand SlaveDisplayLines5Command       => DoSlaveDispLines(5);
        public RelayCommand SlaveDisplayLines6Command       => DoSlaveDispLines(6);
        public RelayCommand SlaveDisplayLines7Command       => DoSlaveDispLines(7);
        public RelayCommand SlaveDisplayLines8Command       => DoSlaveDispLines(8);
        public RelayCommand SlaveDisplayLines9Command       => DoSlaveDispLines(9);
        public RelayCommand SlaveDisplayLines10Command      => DoSlaveDispLines(10);
        public RelayCommand SlaveKeyOneCommand              => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_KEY_ONE ));
        public RelayCommand SlaveKeyManyCommand             => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_KEY_MANY));
        public RelayCommand SlaveKeyOffCommand              => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_KEY_OFF));
        public RelayCommand SlaveImage32x32Command          => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_IMAGE_32x32));
        public RelayCommand SlaveImage128x64Command         => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_IMAGE_128x64));
        public RelayCommand SlaveImage160x219Command        => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_IMAGE_160x219));
        public RelayCommand SlaveImage160x240Command        => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_IMAGE_160x240));
        public RelayCommand SlaveImage120x160Command        => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_IMAGE_120x160));
        public RelayCommand SlaveDisplaySwipeCommand        => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_DISPLAY_SWIPE));
        public RelayCommand SlaveDisplaySwipeDisplayCommand => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_DISPLAY_SWIPE_DISP));
        public RelayCommand SlaveDisplayAppHubCommand       => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_DISPLAY_APP_HUB));
        public RelayCommand SlaveDisplayMenuCommand         => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_DISPLAY_MENU));
        public RelayCommand SlaveDisplayQR1Command          => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_DISPLAY_QR1));
        public RelayCommand SlaveDisplayQR2Command          => new RelayCommand(async (o) => await eftw.DoSlaveMode(SLAVE_DISPLAY_QR2));
        #endregion

        #region Send Key
        public RelayCommand SendKeyCommand
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    await eftw.SendKey(Data.SelectedPosKey, Data.PosData);
                    if (Data.Settings.IsWoolworthsPOS &&
                       (eftw.RequestInProgress != null) && (eftw.RequestInProgress.MessageType == typeof(EFTQueryCardRequest)) &&
                       Data.SelectedPosKey == EFTPOSKey.OkCancel && string.IsNullOrWhiteSpace(Data.PosData))
                    {
                        Data.Log($"Woolies: Cancelling In-progress Query Card", LogType.Info);
                        eftw.RequestInProgress = null;
                    }
                });
            }
        }

        public RelayCommand ToggleSendKey
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    if (!Data.SendKeyEnabled)
                    {
                        Data.SendKeyEnabled = true;
                        await eftw.StartSendKeysTest(Data.SelectedPosKey);
                    }
                    else
                    {
                        Data.SendKeyEnabled = false;
                        eftw.StopSendKeysTest();
                    }
                });
            }
        }

        public async Task ToggleStop()
        {
            if (!Data.SendKeyEnabled)
            {
                Data.SendKeyEnabled = true;
                await eftw.StartSendKeysTest(Data.SelectedPosKey);
            }
            else
            {
                Data.SendKeyEnabled = false;
                eftw.StopSendKeysTest();
            }
        }

        #endregion

        #region PIN
        public RelayCommand AuthPin
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    await eftw.AuthPin();
                });
            }
        }

        public RelayCommand ChangePin
        {
            get
            {
                return new RelayCommand(async (o) =>
                {
                    await eftw.ChangePin();
                });
            }
        }
        #endregion

        #region Proxy Dialog
        public RelayCommand UseProxyDialog
        {
            get
            {
                return new RelayCommand((o) =>
                {
                    ShowProxyDialog(true);
                });
            }
        }

        ProxyViewModel proxyVM = new ProxyViewModel();
        public ProxyViewModel ProxyVM
        {
            get { return proxyVM; }
            set
            {
                proxyVM = value; NotifyPropertyChanged(nameof(ProxyVM));
            }
        }

        public void ShowProxyDialog(bool show)
        {
            if (show)
            {
                if (!proxy.IsVisible)
                {
                    ProxyVM.ProxyWindowClosing = true;
                    proxy.Close();
                    proxy = new ProxyDialog
                    {
                        DataContext = ProxyVM
                    };
                    proxy.Show();
                    ProxyVM.ProxyWindowClosing = false;
                }
            }
            else
            {
                if (Data.Settings.DemoDialogOption == DemoDialogMode.AlwaysShow)
                {
                    ProxyVM.DisplayDetails = new EFTDisplayResponse();
                }
                else
                {
                    proxy.Hide();
                }
            }
        }

        #endregion
    }

}
